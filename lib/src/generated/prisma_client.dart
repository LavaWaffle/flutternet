library prisma.client; // ignore_for_file: no_leading_underscores_for_library_prefixes

import 'package:json_annotation/json_annotation.dart' as _i1;
import 'package:orm/orm.dart' as _i2;
import 'package:orm/dmmf.dart' as _i3;
import 'dart:convert' as _i4;
import 'package:orm/configure.dart' as _i5;
export 'package:orm/orm.dart' show Datasource, PrismaNull, PrismaUnion;
import 'package:json_annotation/json_annotation.dart'
    show $enumDecode, $enumDecodeNullable;
export 'package:orm/orm.dart' show TransactionIsolationLevel;

part 'prisma_client.g.dart';
// GENERATED CODE - DO NOT MODIFY BY HAND
//
// ignore_for_file: constant_identifier_names, depend_on_referenced_packages, non_constant_identifier_names, unused_import
//
//******************************************************************************
// This file was generated by Prisma
// GitHub: https://github.com/odroe/prisma-dart
//******************************************************************************

enum GameScalarFieldEnum {
  id,
  name,
  tournament,
  weWin,
  ourTeam,
  version,
  createdAt,
  updatedAt
}

enum LaunchScalarFieldEnum { id, type, markerId }

enum PointsScalarFieldEnum {
  id,
  isAuto,
  pointType,
  pointValue,
  left,
  top,
  gameId
}

enum QueryMode {
  @_i1.JsonValue('default')
  default$,
  insensitive
}

enum RankingPointScalarFieldEnum {
  id,
  type,
  numberScore,
  minScore,
  maxScore,
  gameId
}

enum SortOrder { asc, desc }

enum Team { Red, Blue }

enum WinType { Win, Lose, Tie }

enum LaunchStatus {
  GotInUpper,
  GotInLower,
  BounceOut,
  MissClose,
  MissFar,
  NoLaunch
}

class GameWhereInput implements _i2.JsonSerializable {
  const GameWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<GameWhereInput> AND;

  final _i2.PrismaNullable<List<GameWhereInput>> OR;

  final _i2.PrismaNullable<GameWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<StringFilter> name;

  final _i2.PrismaNullable<StringFilter> tournament;

  final _i2.PrismaNullable<EnumWinFilter> weWin;

  final _i2.PrismaNullable<EnumTeamFilter> ourTeam;

  final _i2.PrismaNullable<IntFilter> version;

  final _i2.PrismaNullable<DateTimeFilter> createdAt;

  final _i2.PrismaNullable<DateTimeFilter> updatedAt;

  final _i2.PrismaNullable<PointsListRelationFilter> points;

  final _i2.PrismaNullable<RankingPointListRelationFilter> rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameOrderByWithRelationInput implements _i2.JsonSerializable {
  const GameOrderByWithRelationInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> name;

  final _i2.PrismaNullable<SortOrder> tournament;

  final _i2.PrismaNullable<SortOrder> weWin;

  final _i2.PrismaNullable<SortOrder> ourTeam;

  final _i2.PrismaNullable<SortOrder> version;

  final _i2.PrismaNullable<SortOrder> createdAt;

  final _i2.PrismaNullable<SortOrder> updatedAt;

  final _i2.PrismaNullable<PointsOrderByRelationAggregateInput> points;

  final _i2.PrismaNullable<RankingPointOrderByRelationAggregateInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameWhereUniqueInput implements _i2.JsonSerializable {
  const GameWhereUniqueInput({this.id});

  final _i2.PrismaNullable<String> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class GameOrderByWithAggregationInput implements _i2.JsonSerializable {
  const GameOrderByWithAggregationInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> name;

  final _i2.PrismaNullable<SortOrder> tournament;

  final _i2.PrismaNullable<SortOrder> weWin;

  final _i2.PrismaNullable<SortOrder> ourTeam;

  final _i2.PrismaNullable<SortOrder> version;

  final _i2.PrismaNullable<SortOrder> createdAt;

  final _i2.PrismaNullable<SortOrder> updatedAt;

  final _i2.PrismaNullable<GameCountOrderByAggregateInput> $count;

  final _i2.PrismaNullable<GameAvgOrderByAggregateInput> $avg;

  final _i2.PrismaNullable<GameMaxOrderByAggregateInput> $max;

  final _i2.PrismaNullable<GameMinOrderByAggregateInput> $min;

  final _i2.PrismaNullable<GameSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class GameScalarWhereWithAggregatesInput implements _i2.JsonSerializable {
  const GameScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<GameScalarWhereWithAggregatesInput> AND;

  final _i2.PrismaNullable<List<GameScalarWhereWithAggregatesInput>> OR;

  final _i2.PrismaNullable<GameScalarWhereWithAggregatesInput> NOT;

  final _i2.PrismaNullable<StringWithAggregatesFilter> id;

  final _i2.PrismaNullable<StringWithAggregatesFilter> name;

  final _i2.PrismaNullable<StringWithAggregatesFilter> tournament;

  final _i2.PrismaNullable<EnumWinWithAggregatesFilter> weWin;

  final _i2.PrismaNullable<EnumTeamWithAggregatesFilter> ourTeam;

  final _i2.PrismaNullable<IntWithAggregatesFilter> version;

  final _i2.PrismaNullable<DateTimeWithAggregatesFilter> createdAt;

  final _i2.PrismaNullable<DateTimeWithAggregatesFilter> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class LaunchWhereInput implements _i2.JsonSerializable {
  const LaunchWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.markerId,
    this.points,
  });

  final _i2.PrismaNullable<LaunchWhereInput> AND;

  final _i2.PrismaNullable<List<LaunchWhereInput>> OR;

  final _i2.PrismaNullable<LaunchWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<EnumlaunchStatusFilter> type;

  final _i2.PrismaNullable<StringFilter> markerId;

  final _i2.PrismaNullable<PointsRelationFilter> points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'markerId': markerId,
      'points': points,
    };
  }
}

class LaunchOrderByWithRelationInput implements _i2.JsonSerializable {
  const LaunchOrderByWithRelationInput({
    this.id,
    this.type,
    this.markerId,
    this.points,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> markerId;

  final _i2.PrismaNullable<PointsOrderByWithRelationInput> points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
      'points': points,
    };
  }
}

class LaunchWhereUniqueInput implements _i2.JsonSerializable {
  const LaunchWhereUniqueInput({this.id});

  final _i2.PrismaNullable<String> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class LaunchOrderByWithAggregationInput implements _i2.JsonSerializable {
  const LaunchOrderByWithAggregationInput({
    this.id,
    this.type,
    this.markerId,
    this.$count,
    this.$max,
    this.$min,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> markerId;

  final _i2.PrismaNullable<LaunchCountOrderByAggregateInput> $count;

  final _i2.PrismaNullable<LaunchMaxOrderByAggregateInput> $max;

  final _i2.PrismaNullable<LaunchMinOrderByAggregateInput> $min;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
      '_count': $count,
      '_max': $max,
      '_min': $min,
    };
  }
}

class LaunchScalarWhereWithAggregatesInput implements _i2.JsonSerializable {
  const LaunchScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<LaunchScalarWhereWithAggregatesInput> AND;

  final _i2.PrismaNullable<List<LaunchScalarWhereWithAggregatesInput>> OR;

  final _i2.PrismaNullable<LaunchScalarWhereWithAggregatesInput> NOT;

  final _i2.PrismaNullable<StringWithAggregatesFilter> id;

  final _i2.PrismaNullable<EnumlaunchStatusWithAggregatesFilter> type;

  final _i2.PrismaNullable<StringWithAggregatesFilter> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class PointsWhereInput implements _i2.JsonSerializable {
  const PointsWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.game,
    this.launch,
  });

  final _i2.PrismaNullable<PointsWhereInput> AND;

  final _i2.PrismaNullable<List<PointsWhereInput>> OR;

  final _i2.PrismaNullable<PointsWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<BoolFilter> isAuto;

  final _i2.PrismaNullable<StringFilter> pointType;

  final _i2.PrismaNullable<IntFilter> pointValue;

  final _i2.PrismaNullable<FloatNullableFilter> left;

  final _i2.PrismaNullable<FloatNullableFilter> top;

  final _i2.PrismaNullable<StringNullableFilter> gameId;

  final _i2.PrismaNullable<GameRelationFilter> game;

  final _i2.PrismaNullable<LaunchListRelationFilter> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
      'game': game,
      'launch': launch,
    };
  }
}

class PointsOrderByWithRelationInput implements _i2.JsonSerializable {
  const PointsOrderByWithRelationInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.game,
    this.launch,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> isAuto;

  final _i2.PrismaNullable<SortOrder> pointType;

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  final _i2.PrismaNullable<SortOrder> gameId;

  final _i2.PrismaNullable<GameOrderByWithRelationInput> game;

  final _i2.PrismaNullable<LaunchOrderByRelationAggregateInput> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
      'game': game,
      'launch': launch,
    };
  }
}

class PointsWhereUniqueInput implements _i2.JsonSerializable {
  const PointsWhereUniqueInput({this.id});

  final _i2.PrismaNullable<String> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class PointsOrderByWithAggregationInput implements _i2.JsonSerializable {
  const PointsOrderByWithAggregationInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> isAuto;

  final _i2.PrismaNullable<SortOrder> pointType;

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  final _i2.PrismaNullable<SortOrder> gameId;

  final _i2.PrismaNullable<PointsCountOrderByAggregateInput> $count;

  final _i2.PrismaNullable<PointsAvgOrderByAggregateInput> $avg;

  final _i2.PrismaNullable<PointsMaxOrderByAggregateInput> $max;

  final _i2.PrismaNullable<PointsMinOrderByAggregateInput> $min;

  final _i2.PrismaNullable<PointsSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class PointsScalarWhereWithAggregatesInput implements _i2.JsonSerializable {
  const PointsScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<PointsScalarWhereWithAggregatesInput> AND;

  final _i2.PrismaNullable<List<PointsScalarWhereWithAggregatesInput>> OR;

  final _i2.PrismaNullable<PointsScalarWhereWithAggregatesInput> NOT;

  final _i2.PrismaNullable<StringWithAggregatesFilter> id;

  final _i2.PrismaNullable<BoolWithAggregatesFilter> isAuto;

  final _i2.PrismaNullable<StringWithAggregatesFilter> pointType;

  final _i2.PrismaNullable<IntWithAggregatesFilter> pointValue;

  final _i2.PrismaNullable<FloatNullableWithAggregatesFilter> left;

  final _i2.PrismaNullable<FloatNullableWithAggregatesFilter> top;

  final _i2.PrismaNullable<StringNullableWithAggregatesFilter> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class RankingPointWhereInput implements _i2.JsonSerializable {
  const RankingPointWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
    this.game,
  });

  final _i2.PrismaNullable<RankingPointWhereInput> AND;

  final _i2.PrismaNullable<List<RankingPointWhereInput>> OR;

  final _i2.PrismaNullable<RankingPointWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<StringFilter> type;

  final _i2.PrismaNullable<IntFilter> numberScore;

  final _i2.PrismaNullable<IntFilter> minScore;

  final _i2.PrismaNullable<IntFilter> maxScore;

  final _i2.PrismaNullable<StringFilter> gameId;

  final _i2.PrismaNullable<GameRelationFilter> game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
      'game': game,
    };
  }
}

class RankingPointOrderByWithRelationInput implements _i2.JsonSerializable {
  const RankingPointOrderByWithRelationInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
    this.game,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  final _i2.PrismaNullable<SortOrder> gameId;

  final _i2.PrismaNullable<GameOrderByWithRelationInput> game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
      'game': game,
    };
  }
}

class RankingPointWhereUniqueInput implements _i2.JsonSerializable {
  const RankingPointWhereUniqueInput({this.id});

  final _i2.PrismaNullable<String> id;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
    };
  }
}

class RankingPointOrderByWithAggregationInput implements _i2.JsonSerializable {
  const RankingPointOrderByWithAggregationInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
    this.$count,
    this.$avg,
    this.$max,
    this.$min,
    this.$sum,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  final _i2.PrismaNullable<SortOrder> gameId;

  final _i2.PrismaNullable<RankingPointCountOrderByAggregateInput> $count;

  final _i2.PrismaNullable<RankingPointAvgOrderByAggregateInput> $avg;

  final _i2.PrismaNullable<RankingPointMaxOrderByAggregateInput> $max;

  final _i2.PrismaNullable<RankingPointMinOrderByAggregateInput> $min;

  final _i2.PrismaNullable<RankingPointSumOrderByAggregateInput> $sum;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
      '_count': $count,
      '_avg': $avg,
      '_max': $max,
      '_min': $min,
      '_sum': $sum,
    };
  }
}

class RankingPointScalarWhereWithAggregatesInput
    implements _i2.JsonSerializable {
  const RankingPointScalarWhereWithAggregatesInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<RankingPointScalarWhereWithAggregatesInput> AND;

  final _i2.PrismaNullable<List<RankingPointScalarWhereWithAggregatesInput>> OR;

  final _i2.PrismaNullable<RankingPointScalarWhereWithAggregatesInput> NOT;

  final _i2.PrismaNullable<StringWithAggregatesFilter> id;

  final _i2.PrismaNullable<StringWithAggregatesFilter> type;

  final _i2.PrismaNullable<IntWithAggregatesFilter> numberScore;

  final _i2.PrismaNullable<IntWithAggregatesFilter> minScore;

  final _i2.PrismaNullable<IntWithAggregatesFilter> maxScore;

  final _i2.PrismaNullable<StringWithAggregatesFilter> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class GameCreateInput implements _i2.JsonSerializable {
  const GameCreateInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2.PrismaNullable<PointsCreateNestedManyWithoutGameInput> points;

  final _i2.PrismaNullable<RankingPointCreateNestedManyWithoutGameInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameUncheckedCreateInput implements _i2.JsonSerializable {
  const GameUncheckedCreateInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2.PrismaNullable<PointsUncheckedCreateNestedManyWithoutGameInput>
      points;

  final _i2
          .PrismaNullable<RankingPointUncheckedCreateNestedManyWithoutGameInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameUpdateInput implements _i2.JsonSerializable {
  const GameUpdateInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2.PrismaNullable<PointsUpdateManyWithoutGameNestedInput> points;

  final _i2.PrismaNullable<RankingPointUpdateManyWithoutGameNestedInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameUncheckedUpdateInput implements _i2.JsonSerializable {
  const GameUncheckedUpdateInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2.PrismaNullable<PointsUncheckedUpdateManyWithoutGameNestedInput>
      points;

  final _i2
          .PrismaNullable<RankingPointUncheckedUpdateManyWithoutGameNestedInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameCreateManyInput implements _i2.JsonSerializable {
  const GameCreateManyInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class GameUpdateManyMutationInput implements _i2.JsonSerializable {
  const GameUpdateManyMutationInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class GameUncheckedUpdateManyInput implements _i2.JsonSerializable {
  const GameUncheckedUpdateManyInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class LaunchCreateInput implements _i2.JsonSerializable {
  const LaunchCreateInput({
    required this.id,
    required this.type,
    required this.points,
  });

  final String id;

  final LaunchStatus type;

  final PointsCreateNestedOneWithoutLaunchInput points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'points': points,
    };
  }
}

class LaunchUncheckedCreateInput implements _i2.JsonSerializable {
  const LaunchUncheckedCreateInput({
    required this.id,
    required this.type,
    required this.markerId,
  });

  final String id;

  final LaunchStatus type;

  final String markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class LaunchUpdateInput implements _i2.JsonSerializable {
  const LaunchUpdateInput({
    this.id,
    this.type,
    this.points,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<PointsUpdateOneRequiredWithoutLaunchNestedInput>
      points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'points': points,
    };
  }
}

class LaunchUncheckedUpdateInput implements _i2.JsonSerializable {
  const LaunchUncheckedUpdateInput({
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class LaunchCreateManyInput implements _i2.JsonSerializable {
  const LaunchCreateManyInput({
    required this.id,
    required this.type,
    required this.markerId,
  });

  final String id;

  final LaunchStatus type;

  final String markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class LaunchUpdateManyMutationInput implements _i2.JsonSerializable {
  const LaunchUpdateManyMutationInput({
    this.id,
    this.type,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchUncheckedUpdateManyInput implements _i2.JsonSerializable {
  const LaunchUncheckedUpdateManyInput({
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class PointsCreateInput implements _i2.JsonSerializable {
  const PointsCreateInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.game,
    this.launch,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<GameCreateNestedOneWithoutPointsInput> game;

  final _i2.PrismaNullable<LaunchCreateNestedManyWithoutPointsInput> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'game': game,
      'launch': launch,
    };
  }
}

class PointsUncheckedCreateInput implements _i2.JsonSerializable {
  const PointsUncheckedCreateInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.launch,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> gameId;

  final _i2.PrismaNullable<LaunchUncheckedCreateNestedManyWithoutPointsInput>
      launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
      'launch': launch,
    };
  }
}

class PointsUpdateInput implements _i2.JsonSerializable {
  const PointsUpdateInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.game,
    this.launch,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<GameUpdateOneWithoutPointsNestedInput> game;

  final _i2.PrismaNullable<LaunchUpdateManyWithoutPointsNestedInput> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'game': game,
      'launch': launch,
    };
  }
}

class PointsUncheckedUpdateInput implements _i2.JsonSerializable {
  const PointsUncheckedUpdateInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.launch,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<NullableStringFieldUpdateOperationsInput> gameId;

  final _i2.PrismaNullable<LaunchUncheckedUpdateManyWithoutPointsNestedInput>
      launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
      'launch': launch,
    };
  }
}

class PointsCreateManyInput implements _i2.JsonSerializable {
  const PointsCreateManyInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class PointsUpdateManyMutationInput implements _i2.JsonSerializable {
  const PointsUpdateManyMutationInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
    };
  }
}

class PointsUncheckedUpdateManyInput implements _i2.JsonSerializable {
  const PointsUncheckedUpdateManyInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<NullableStringFieldUpdateOperationsInput> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class RankingPointCreateInput implements _i2.JsonSerializable {
  const RankingPointCreateInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.game,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final GameCreateNestedOneWithoutRankingPointInput game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'game': game,
    };
  }
}

class RankingPointUncheckedCreateInput implements _i2.JsonSerializable {
  const RankingPointUncheckedCreateInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.gameId,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final String gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointUpdateInput implements _i2.JsonSerializable {
  const RankingPointUpdateInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.game,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  final _i2.PrismaNullable<GameUpdateOneRequiredWithoutRankingPointNestedInput>
      game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'game': game,
    };
  }
}

class RankingPointUncheckedUpdateInput implements _i2.JsonSerializable {
  const RankingPointUncheckedUpdateInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointCreateManyInput implements _i2.JsonSerializable {
  const RankingPointCreateManyInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.gameId,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final String gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointUpdateManyMutationInput implements _i2.JsonSerializable {
  const RankingPointUpdateManyMutationInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointUncheckedUpdateManyInput implements _i2.JsonSerializable {
  const RankingPointUncheckedUpdateManyInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class StringFilter implements _i2.JsonSerializable {
  const StringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
  });

  final _i2.PrismaNullable<String> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<QueryMode> mode;

  final _i2.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'mode': mode,
      'not': not,
    };
  }
}

class EnumWinFilter implements _i2.JsonSerializable {
  const EnumWinFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<WinType> equals;

  final _i2.PrismaNullable<List<WinType>> in$;

  final _i2.PrismaNullable<List<WinType>> notIn;

  final _i2.PrismaNullable<NestedEnumWinFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class EnumTeamFilter implements _i2.JsonSerializable {
  const EnumTeamFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<Team> equals;

  final _i2.PrismaNullable<List<Team>> in$;

  final _i2.PrismaNullable<List<Team>> notIn;

  final _i2.PrismaNullable<NestedEnumTeamFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class IntFilter implements _i2.JsonSerializable {
  const IntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<int> equals;

  final _i2.PrismaNullable<List<int>> in$;

  final _i2.PrismaNullable<List<int>> notIn;

  final _i2.PrismaNullable<int> lt;

  final _i2.PrismaNullable<int> lte;

  final _i2.PrismaNullable<int> gt;

  final _i2.PrismaNullable<int> gte;

  final _i2.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class DateTimeFilter implements _i2.JsonSerializable {
  const DateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<DateTime> equals;

  final _i2.PrismaNullable<List<DateTime>> in$;

  final _i2.PrismaNullable<List<DateTime>> notIn;

  final _i2.PrismaNullable<DateTime> lt;

  final _i2.PrismaNullable<DateTime> lte;

  final _i2.PrismaNullable<DateTime> gt;

  final _i2.PrismaNullable<DateTime> gte;

  final _i2.PrismaNullable<NestedDateTimeFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class PointsListRelationFilter implements _i2.JsonSerializable {
  const PointsListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i2.PrismaNullable<PointsWhereInput> every;

  final _i2.PrismaNullable<PointsWhereInput> some;

  final _i2.PrismaNullable<PointsWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class RankingPointListRelationFilter implements _i2.JsonSerializable {
  const RankingPointListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i2.PrismaNullable<RankingPointWhereInput> every;

  final _i2.PrismaNullable<RankingPointWhereInput> some;

  final _i2.PrismaNullable<RankingPointWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class PointsOrderByRelationAggregateInput implements _i2.JsonSerializable {
  const PointsOrderByRelationAggregateInput({this.$count});

  final _i2.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class RankingPointOrderByRelationAggregateInput
    implements _i2.JsonSerializable {
  const RankingPointOrderByRelationAggregateInput({this.$count});

  final _i2.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class GameCountOrderByAggregateInput implements _i2.JsonSerializable {
  const GameCountOrderByAggregateInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> name;

  final _i2.PrismaNullable<SortOrder> tournament;

  final _i2.PrismaNullable<SortOrder> weWin;

  final _i2.PrismaNullable<SortOrder> ourTeam;

  final _i2.PrismaNullable<SortOrder> version;

  final _i2.PrismaNullable<SortOrder> createdAt;

  final _i2.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class GameAvgOrderByAggregateInput implements _i2.JsonSerializable {
  const GameAvgOrderByAggregateInput({this.version});

  final _i2.PrismaNullable<SortOrder> version;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'version': version,
    };
  }
}

class GameMaxOrderByAggregateInput implements _i2.JsonSerializable {
  const GameMaxOrderByAggregateInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> name;

  final _i2.PrismaNullable<SortOrder> tournament;

  final _i2.PrismaNullable<SortOrder> weWin;

  final _i2.PrismaNullable<SortOrder> ourTeam;

  final _i2.PrismaNullable<SortOrder> version;

  final _i2.PrismaNullable<SortOrder> createdAt;

  final _i2.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class GameMinOrderByAggregateInput implements _i2.JsonSerializable {
  const GameMinOrderByAggregateInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> name;

  final _i2.PrismaNullable<SortOrder> tournament;

  final _i2.PrismaNullable<SortOrder> weWin;

  final _i2.PrismaNullable<SortOrder> ourTeam;

  final _i2.PrismaNullable<SortOrder> version;

  final _i2.PrismaNullable<SortOrder> createdAt;

  final _i2.PrismaNullable<SortOrder> updatedAt;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
    };
  }
}

class GameSumOrderByAggregateInput implements _i2.JsonSerializable {
  const GameSumOrderByAggregateInput({this.version});

  final _i2.PrismaNullable<SortOrder> version;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'version': version,
    };
  }
}

class StringWithAggregatesFilter implements _i2.JsonSerializable {
  const StringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<String> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<QueryMode> mode;

  final _i2.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedStringFilter> $min;

  final _i2.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'mode': mode,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class EnumWinWithAggregatesFilter implements _i2.JsonSerializable {
  const EnumWinWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<WinType> equals;

  final _i2.PrismaNullable<List<WinType>> in$;

  final _i2.PrismaNullable<List<WinType>> notIn;

  final _i2.PrismaNullable<NestedEnumWinWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumWinFilter> $min;

  final _i2.PrismaNullable<NestedEnumWinFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class EnumTeamWithAggregatesFilter implements _i2.JsonSerializable {
  const EnumTeamWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<Team> equals;

  final _i2.PrismaNullable<List<Team>> in$;

  final _i2.PrismaNullable<List<Team>> notIn;

  final _i2.PrismaNullable<NestedEnumTeamWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumTeamFilter> $min;

  final _i2.PrismaNullable<NestedEnumTeamFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class IntWithAggregatesFilter implements _i2.JsonSerializable {
  const IntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<int> equals;

  final _i2.PrismaNullable<List<int>> in$;

  final _i2.PrismaNullable<List<int>> notIn;

  final _i2.PrismaNullable<int> lt;

  final _i2.PrismaNullable<int> lte;

  final _i2.PrismaNullable<int> gt;

  final _i2.PrismaNullable<int> gte;

  final _i2.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedFloatFilter> $avg;

  final _i2.PrismaNullable<NestedIntFilter> $sum;

  final _i2.PrismaNullable<NestedIntFilter> $min;

  final _i2.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class DateTimeWithAggregatesFilter implements _i2.JsonSerializable {
  const DateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<DateTime> equals;

  final _i2.PrismaNullable<List<DateTime>> in$;

  final _i2.PrismaNullable<List<DateTime>> notIn;

  final _i2.PrismaNullable<DateTime> lt;

  final _i2.PrismaNullable<DateTime> lte;

  final _i2.PrismaNullable<DateTime> gt;

  final _i2.PrismaNullable<DateTime> gte;

  final _i2.PrismaNullable<NestedDateTimeWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedDateTimeFilter> $min;

  final _i2.PrismaNullable<NestedDateTimeFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class EnumlaunchStatusFilter implements _i2.JsonSerializable {
  const EnumlaunchStatusFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<LaunchStatus> equals;

  final _i2.PrismaNullable<List<LaunchStatus>> in$;

  final _i2.PrismaNullable<List<LaunchStatus>> notIn;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class PointsRelationFilter implements _i2.JsonSerializable {
  const PointsRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i2.PrismaNullable<PointsWhereInput> is$;

  final _i2.PrismaNullable<PointsWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class LaunchCountOrderByAggregateInput implements _i2.JsonSerializable {
  const LaunchCountOrderByAggregateInput({
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class LaunchMaxOrderByAggregateInput implements _i2.JsonSerializable {
  const LaunchMaxOrderByAggregateInput({
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class LaunchMinOrderByAggregateInput implements _i2.JsonSerializable {
  const LaunchMinOrderByAggregateInput({
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class EnumlaunchStatusWithAggregatesFilter implements _i2.JsonSerializable {
  const EnumlaunchStatusWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<LaunchStatus> equals;

  final _i2.PrismaNullable<List<LaunchStatus>> in$;

  final _i2.PrismaNullable<List<LaunchStatus>> notIn;

  final _i2.PrismaNullable<NestedEnumlaunchStatusWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> $min;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class BoolFilter implements _i2.JsonSerializable {
  const BoolFilter({
    this.equals,
    this.not,
  });

  final _i2.PrismaNullable<bool> equals;

  final _i2.PrismaNullable<NestedBoolFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
    };
  }
}

class FloatNullableFilter implements _i2.JsonSerializable {
  const FloatNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<double>> in$;

  final _i2.PrismaNullable<List<double>> notIn;

  final _i2.PrismaNullable<double> lt;

  final _i2.PrismaNullable<double> lte;

  final _i2.PrismaNullable<double> gt;

  final _i2.PrismaNullable<double> gte;

  final _i2.PrismaNullable<NestedFloatNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class StringNullableFilter implements _i2.JsonSerializable {
  const StringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<QueryMode> mode;

  final _i2.PrismaNullable<NestedStringNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'mode': mode,
      'not': not,
    };
  }
}

class GameRelationFilter implements _i2.JsonSerializable {
  const GameRelationFilter({
    this.is$,
    this.isNot,
  });

  final _i2.PrismaNullable<GameWhereInput> is$;

  final _i2.PrismaNullable<GameWhereInput> isNot;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'is': is$,
      'isNot': isNot,
    };
  }
}

class LaunchListRelationFilter implements _i2.JsonSerializable {
  const LaunchListRelationFilter({
    this.every,
    this.some,
    this.none,
  });

  final _i2.PrismaNullable<LaunchWhereInput> every;

  final _i2.PrismaNullable<LaunchWhereInput> some;

  final _i2.PrismaNullable<LaunchWhereInput> none;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'every': every,
      'some': some,
      'none': none,
    };
  }
}

class LaunchOrderByRelationAggregateInput implements _i2.JsonSerializable {
  const LaunchOrderByRelationAggregateInput({this.$count});

  final _i2.PrismaNullable<SortOrder> $count;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      '_count': $count,
    };
  }
}

class PointsCountOrderByAggregateInput implements _i2.JsonSerializable {
  const PointsCountOrderByAggregateInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> isAuto;

  final _i2.PrismaNullable<SortOrder> pointType;

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class PointsAvgOrderByAggregateInput implements _i2.JsonSerializable {
  const PointsAvgOrderByAggregateInput({
    this.pointValue,
    this.left,
    this.top,
  });

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'pointValue': pointValue,
      'left': left,
      'top': top,
    };
  }
}

class PointsMaxOrderByAggregateInput implements _i2.JsonSerializable {
  const PointsMaxOrderByAggregateInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> isAuto;

  final _i2.PrismaNullable<SortOrder> pointType;

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class PointsMinOrderByAggregateInput implements _i2.JsonSerializable {
  const PointsMinOrderByAggregateInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> isAuto;

  final _i2.PrismaNullable<SortOrder> pointType;

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class PointsSumOrderByAggregateInput implements _i2.JsonSerializable {
  const PointsSumOrderByAggregateInput({
    this.pointValue,
    this.left,
    this.top,
  });

  final _i2.PrismaNullable<SortOrder> pointValue;

  final _i2.PrismaNullable<SortOrder> left;

  final _i2.PrismaNullable<SortOrder> top;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'pointValue': pointValue,
      'left': left,
      'top': top,
    };
  }
}

class BoolWithAggregatesFilter implements _i2.JsonSerializable {
  const BoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<bool> equals;

  final _i2.PrismaNullable<NestedBoolWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedBoolFilter> $min;

  final _i2.PrismaNullable<NestedBoolFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class FloatNullableWithAggregatesFilter implements _i2.JsonSerializable {
  const FloatNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<double>> in$;

  final _i2.PrismaNullable<List<double>> notIn;

  final _i2.PrismaNullable<double> lt;

  final _i2.PrismaNullable<double> lte;

  final _i2.PrismaNullable<double> gt;

  final _i2.PrismaNullable<double> gte;

  final _i2.PrismaNullable<NestedFloatNullableWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntNullableFilter> $count;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $sum;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $min;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class StringNullableWithAggregatesFilter implements _i2.JsonSerializable {
  const StringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.mode,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<QueryMode> mode;

  final _i2.PrismaNullable<NestedStringNullableWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntNullableFilter> $count;

  final _i2.PrismaNullable<NestedStringNullableFilter> $min;

  final _i2.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'mode': mode,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class RankingPointCountOrderByAggregateInput implements _i2.JsonSerializable {
  const RankingPointCountOrderByAggregateInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointAvgOrderByAggregateInput implements _i2.JsonSerializable {
  const RankingPointAvgOrderByAggregateInput({
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointMaxOrderByAggregateInput implements _i2.JsonSerializable {
  const RankingPointMaxOrderByAggregateInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointMinOrderByAggregateInput implements _i2.JsonSerializable {
  const RankingPointMinOrderByAggregateInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<SortOrder> id;

  final _i2.PrismaNullable<SortOrder> type;

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  final _i2.PrismaNullable<SortOrder> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class RankingPointSumOrderByAggregateInput implements _i2.JsonSerializable {
  const RankingPointSumOrderByAggregateInput({
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<SortOrder> numberScore;

  final _i2.PrismaNullable<SortOrder> minScore;

  final _i2.PrismaNullable<SortOrder> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class PointsCreateNestedManyWithoutGameInput implements _i2.JsonSerializable {
  const PointsCreateNestedManyWithoutGameInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<PointsCreateWithoutGameInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class RankingPointCreateNestedManyWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointCreateNestedManyWithoutGameInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<RankingPointCreateWithoutGameInput> create;

  final _i2.PrismaNullable<RankingPointCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<RankingPointCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class PointsUncheckedCreateNestedManyWithoutGameInput
    implements _i2.JsonSerializable {
  const PointsUncheckedCreateNestedManyWithoutGameInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<PointsCreateWithoutGameInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class RankingPointUncheckedCreateNestedManyWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUncheckedCreateNestedManyWithoutGameInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<RankingPointCreateWithoutGameInput> create;

  final _i2.PrismaNullable<RankingPointCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<RankingPointCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class StringFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const StringFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<String> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class EnumWinFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const EnumWinFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<WinType> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class EnumTeamFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const EnumTeamFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<Team> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class IntFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const IntFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i2.PrismaNullable<int> set$;

  final _i2.PrismaNullable<int> increment;

  final _i2.PrismaNullable<int> decrement;

  final _i2.PrismaNullable<int> multiply;

  final _i2.PrismaNullable<int> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class DateTimeFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const DateTimeFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<DateTime> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class PointsUpdateManyWithoutGameNestedInput implements _i2.JsonSerializable {
  const PointsUpdateManyWithoutGameNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<PointsCreateWithoutGameInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsUpsertWithWhereUniqueWithoutGameInput> upsert;

  final _i2.PrismaNullable<PointsCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<PointsWhereUniqueInput> set$;

  final _i2.PrismaNullable<PointsWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<PointsWhereUniqueInput> delete;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  final _i2.PrismaNullable<PointsUpdateWithWhereUniqueWithoutGameInput> update;

  final _i2.PrismaNullable<PointsUpdateManyWithWhereWithoutGameInput>
      updateMany;

  final _i2.PrismaNullable<PointsScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class RankingPointUpdateManyWithoutGameNestedInput
    implements _i2.JsonSerializable {
  const RankingPointUpdateManyWithoutGameNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<RankingPointCreateWithoutGameInput> create;

  final _i2.PrismaNullable<RankingPointCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<RankingPointUpsertWithWhereUniqueWithoutGameInput>
      upsert;

  final _i2.PrismaNullable<RankingPointCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> set$;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> delete;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> connect;

  final _i2.PrismaNullable<RankingPointUpdateWithWhereUniqueWithoutGameInput>
      update;

  final _i2.PrismaNullable<RankingPointUpdateManyWithWhereWithoutGameInput>
      updateMany;

  final _i2.PrismaNullable<RankingPointScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class PointsUncheckedUpdateManyWithoutGameNestedInput
    implements _i2.JsonSerializable {
  const PointsUncheckedUpdateManyWithoutGameNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<PointsCreateWithoutGameInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsUpsertWithWhereUniqueWithoutGameInput> upsert;

  final _i2.PrismaNullable<PointsCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<PointsWhereUniqueInput> set$;

  final _i2.PrismaNullable<PointsWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<PointsWhereUniqueInput> delete;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  final _i2.PrismaNullable<PointsUpdateWithWhereUniqueWithoutGameInput> update;

  final _i2.PrismaNullable<PointsUpdateManyWithWhereWithoutGameInput>
      updateMany;

  final _i2.PrismaNullable<PointsScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class RankingPointUncheckedUpdateManyWithoutGameNestedInput
    implements _i2.JsonSerializable {
  const RankingPointUncheckedUpdateManyWithoutGameNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<RankingPointCreateWithoutGameInput> create;

  final _i2.PrismaNullable<RankingPointCreateOrConnectWithoutGameInput>
      connectOrCreate;

  final _i2.PrismaNullable<RankingPointUpsertWithWhereUniqueWithoutGameInput>
      upsert;

  final _i2.PrismaNullable<RankingPointCreateManyGameInputEnvelope> createMany;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> set$;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> delete;

  final _i2.PrismaNullable<RankingPointWhereUniqueInput> connect;

  final _i2.PrismaNullable<RankingPointUpdateWithWhereUniqueWithoutGameInput>
      update;

  final _i2.PrismaNullable<RankingPointUpdateManyWithWhereWithoutGameInput>
      updateMany;

  final _i2.PrismaNullable<RankingPointScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class PointsCreateNestedOneWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsCreateNestedOneWithoutLaunchInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i2.PrismaNullable<PointsCreateWithoutLaunchInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutLaunchInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class EnumlaunchStatusFieldUpdateOperationsInput
    implements _i2.JsonSerializable {
  const EnumlaunchStatusFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<LaunchStatus> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class PointsUpdateOneRequiredWithoutLaunchNestedInput
    implements _i2.JsonSerializable {
  const PointsUpdateOneRequiredWithoutLaunchNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i2.PrismaNullable<PointsCreateWithoutLaunchInput> create;

  final _i2.PrismaNullable<PointsCreateOrConnectWithoutLaunchInput>
      connectOrCreate;

  final _i2.PrismaNullable<PointsUpsertWithoutLaunchInput> upsert;

  final _i2.PrismaNullable<PointsWhereUniqueInput> connect;

  final _i2.PrismaNullable<PointsUpdateWithoutLaunchInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class GameCreateNestedOneWithoutPointsInput implements _i2.JsonSerializable {
  const GameCreateNestedOneWithoutPointsInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i2.PrismaNullable<GameCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<GameCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<GameWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class LaunchCreateNestedManyWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchCreateNestedManyWithoutPointsInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<LaunchCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<LaunchCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<LaunchCreateManyPointsInputEnvelope> createMany;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class LaunchUncheckedCreateNestedManyWithoutPointsInput
    implements _i2.JsonSerializable {
  const LaunchUncheckedCreateNestedManyWithoutPointsInput({
    this.create,
    this.connectOrCreate,
    this.createMany,
    this.connect,
  });

  final _i2.PrismaNullable<LaunchCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<LaunchCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<LaunchCreateManyPointsInputEnvelope> createMany;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'createMany': createMany,
      'connect': connect,
    };
  }
}

class BoolFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const BoolFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<bool> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class NullableFloatFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const NullableFloatFieldUpdateOperationsInput({
    this.set$,
    this.increment,
    this.decrement,
    this.multiply,
    this.divide,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> set$;

  final _i2.PrismaNullable<double> increment;

  final _i2.PrismaNullable<double> decrement;

  final _i2.PrismaNullable<double> multiply;

  final _i2.PrismaNullable<double> divide;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
      'increment': increment,
      'decrement': decrement,
      'multiply': multiply,
      'divide': divide,
    };
  }
}

class GameUpdateOneWithoutPointsNestedInput implements _i2.JsonSerializable {
  const GameUpdateOneWithoutPointsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
  });

  final _i2.PrismaNullable<GameCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<GameCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<GameUpsertWithoutPointsInput> upsert;

  final _i2.PrismaNullable<bool> disconnect;

  final _i2.PrismaNullable<bool> delete;

  final _i2.PrismaNullable<GameWhereUniqueInput> connect;

  final _i2.PrismaNullable<GameUpdateWithoutPointsInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
    };
  }
}

class LaunchUpdateManyWithoutPointsNestedInput implements _i2.JsonSerializable {
  const LaunchUpdateManyWithoutPointsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<LaunchCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<LaunchCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<LaunchUpsertWithWhereUniqueWithoutPointsInput>
      upsert;

  final _i2.PrismaNullable<LaunchCreateManyPointsInputEnvelope> createMany;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> set$;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> delete;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> connect;

  final _i2.PrismaNullable<LaunchUpdateWithWhereUniqueWithoutPointsInput>
      update;

  final _i2.PrismaNullable<LaunchUpdateManyWithWhereWithoutPointsInput>
      updateMany;

  final _i2.PrismaNullable<LaunchScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class NullableStringFieldUpdateOperationsInput implements _i2.JsonSerializable {
  const NullableStringFieldUpdateOperationsInput({this.set$});

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> set$;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'set': set$,
    };
  }
}

class LaunchUncheckedUpdateManyWithoutPointsNestedInput
    implements _i2.JsonSerializable {
  const LaunchUncheckedUpdateManyWithoutPointsNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.createMany,
    this.set$,
    this.disconnect,
    this.delete,
    this.connect,
    this.update,
    this.updateMany,
    this.deleteMany,
  });

  final _i2.PrismaNullable<LaunchCreateWithoutPointsInput> create;

  final _i2.PrismaNullable<LaunchCreateOrConnectWithoutPointsInput>
      connectOrCreate;

  final _i2.PrismaNullable<LaunchUpsertWithWhereUniqueWithoutPointsInput>
      upsert;

  final _i2.PrismaNullable<LaunchCreateManyPointsInputEnvelope> createMany;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> set$;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> disconnect;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> delete;

  final _i2.PrismaNullable<LaunchWhereUniqueInput> connect;

  final _i2.PrismaNullable<LaunchUpdateWithWhereUniqueWithoutPointsInput>
      update;

  final _i2.PrismaNullable<LaunchUpdateManyWithWhereWithoutPointsInput>
      updateMany;

  final _i2.PrismaNullable<LaunchScalarWhereInput> deleteMany;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'createMany': createMany,
      'set': set$,
      'disconnect': disconnect,
      'delete': delete,
      'connect': connect,
      'update': update,
      'updateMany': updateMany,
      'deleteMany': deleteMany,
    };
  }
}

class GameCreateNestedOneWithoutRankingPointInput
    implements _i2.JsonSerializable {
  const GameCreateNestedOneWithoutRankingPointInput({
    this.create,
    this.connectOrCreate,
    this.connect,
  });

  final _i2.PrismaNullable<GameCreateWithoutRankingPointInput> create;

  final _i2.PrismaNullable<GameCreateOrConnectWithoutRankingPointInput>
      connectOrCreate;

  final _i2.PrismaNullable<GameWhereUniqueInput> connect;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'connect': connect,
    };
  }
}

class GameUpdateOneRequiredWithoutRankingPointNestedInput
    implements _i2.JsonSerializable {
  const GameUpdateOneRequiredWithoutRankingPointNestedInput({
    this.create,
    this.connectOrCreate,
    this.upsert,
    this.connect,
    this.update,
  });

  final _i2.PrismaNullable<GameCreateWithoutRankingPointInput> create;

  final _i2.PrismaNullable<GameCreateOrConnectWithoutRankingPointInput>
      connectOrCreate;

  final _i2.PrismaNullable<GameUpsertWithoutRankingPointInput> upsert;

  final _i2.PrismaNullable<GameWhereUniqueInput> connect;

  final _i2.PrismaNullable<GameUpdateWithoutRankingPointInput> update;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'create': create,
      'connectOrCreate': connectOrCreate,
      'upsert': upsert,
      'connect': connect,
      'update': update,
    };
  }
}

class NestedStringFilter implements _i2.JsonSerializable {
  const NestedStringFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i2.PrismaNullable<String> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<NestedStringFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedEnumWinFilter implements _i2.JsonSerializable {
  const NestedEnumWinFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<WinType> equals;

  final _i2.PrismaNullable<List<WinType>> in$;

  final _i2.PrismaNullable<List<WinType>> notIn;

  final _i2.PrismaNullable<NestedEnumWinFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class NestedEnumTeamFilter implements _i2.JsonSerializable {
  const NestedEnumTeamFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<Team> equals;

  final _i2.PrismaNullable<List<Team>> in$;

  final _i2.PrismaNullable<List<Team>> notIn;

  final _i2.PrismaNullable<NestedEnumTeamFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class NestedIntFilter implements _i2.JsonSerializable {
  const NestedIntFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<int> equals;

  final _i2.PrismaNullable<List<int>> in$;

  final _i2.PrismaNullable<List<int>> notIn;

  final _i2.PrismaNullable<int> lt;

  final _i2.PrismaNullable<int> lte;

  final _i2.PrismaNullable<int> gt;

  final _i2.PrismaNullable<int> gte;

  final _i2.PrismaNullable<NestedIntFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedDateTimeFilter implements _i2.JsonSerializable {
  const NestedDateTimeFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<DateTime> equals;

  final _i2.PrismaNullable<List<DateTime>> in$;

  final _i2.PrismaNullable<List<DateTime>> notIn;

  final _i2.PrismaNullable<DateTime> lt;

  final _i2.PrismaNullable<DateTime> lte;

  final _i2.PrismaNullable<DateTime> gt;

  final _i2.PrismaNullable<DateTime> gte;

  final _i2.PrismaNullable<NestedDateTimeFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedStringWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<String> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<NestedStringWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedStringFilter> $min;

  final _i2.PrismaNullable<NestedStringFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedEnumWinWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedEnumWinWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<WinType> equals;

  final _i2.PrismaNullable<List<WinType>> in$;

  final _i2.PrismaNullable<List<WinType>> notIn;

  final _i2.PrismaNullable<NestedEnumWinWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumWinFilter> $min;

  final _i2.PrismaNullable<NestedEnumWinFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedEnumTeamWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedEnumTeamWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<Team> equals;

  final _i2.PrismaNullable<List<Team>> in$;

  final _i2.PrismaNullable<List<Team>> notIn;

  final _i2.PrismaNullable<NestedEnumTeamWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumTeamFilter> $min;

  final _i2.PrismaNullable<NestedEnumTeamFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedIntWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedIntWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<int> equals;

  final _i2.PrismaNullable<List<int>> in$;

  final _i2.PrismaNullable<List<int>> notIn;

  final _i2.PrismaNullable<int> lt;

  final _i2.PrismaNullable<int> lte;

  final _i2.PrismaNullable<int> gt;

  final _i2.PrismaNullable<int> gte;

  final _i2.PrismaNullable<NestedIntWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedFloatFilter> $avg;

  final _i2.PrismaNullable<NestedIntFilter> $sum;

  final _i2.PrismaNullable<NestedIntFilter> $min;

  final _i2.PrismaNullable<NestedIntFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatFilter implements _i2.JsonSerializable {
  const NestedFloatFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<double> equals;

  final _i2.PrismaNullable<List<double>> in$;

  final _i2.PrismaNullable<List<double>> notIn;

  final _i2.PrismaNullable<double> lt;

  final _i2.PrismaNullable<double> lte;

  final _i2.PrismaNullable<double> gt;

  final _i2.PrismaNullable<double> gte;

  final _i2.PrismaNullable<NestedFloatFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedDateTimeWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedDateTimeWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<DateTime> equals;

  final _i2.PrismaNullable<List<DateTime>> in$;

  final _i2.PrismaNullable<List<DateTime>> notIn;

  final _i2.PrismaNullable<DateTime> lt;

  final _i2.PrismaNullable<DateTime> lte;

  final _i2.PrismaNullable<DateTime> gt;

  final _i2.PrismaNullable<DateTime> gte;

  final _i2.PrismaNullable<NestedDateTimeWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedDateTimeFilter> $min;

  final _i2.PrismaNullable<NestedDateTimeFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedEnumlaunchStatusFilter implements _i2.JsonSerializable {
  const NestedEnumlaunchStatusFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
  });

  final _i2.PrismaNullable<LaunchStatus> equals;

  final _i2.PrismaNullable<List<LaunchStatus>> in$;

  final _i2.PrismaNullable<List<LaunchStatus>> notIn;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
    };
  }
}

class NestedEnumlaunchStatusWithAggregatesFilter
    implements _i2.JsonSerializable {
  const NestedEnumlaunchStatusWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<LaunchStatus> equals;

  final _i2.PrismaNullable<List<LaunchStatus>> in$;

  final _i2.PrismaNullable<List<LaunchStatus>> notIn;

  final _i2.PrismaNullable<NestedEnumlaunchStatusWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> $min;

  final _i2.PrismaNullable<NestedEnumlaunchStatusFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedBoolFilter implements _i2.JsonSerializable {
  const NestedBoolFilter({
    this.equals,
    this.not,
  });

  final _i2.PrismaNullable<bool> equals;

  final _i2.PrismaNullable<NestedBoolFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
    };
  }
}

class NestedFloatNullableFilter implements _i2.JsonSerializable {
  const NestedFloatNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<double>> in$;

  final _i2.PrismaNullable<List<double>> notIn;

  final _i2.PrismaNullable<double> lt;

  final _i2.PrismaNullable<double> lte;

  final _i2.PrismaNullable<double> gt;

  final _i2.PrismaNullable<double> gte;

  final _i2.PrismaNullable<NestedFloatNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringNullableFilter implements _i2.JsonSerializable {
  const NestedStringNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<NestedStringNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
    };
  }
}

class NestedBoolWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedBoolWithAggregatesFilter({
    this.equals,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<bool> equals;

  final _i2.PrismaNullable<NestedBoolWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntFilter> $count;

  final _i2.PrismaNullable<NestedBoolFilter> $min;

  final _i2.PrismaNullable<NestedBoolFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedFloatNullableWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedFloatNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<double>> in$;

  final _i2.PrismaNullable<List<double>> notIn;

  final _i2.PrismaNullable<double> lt;

  final _i2.PrismaNullable<double> lte;

  final _i2.PrismaNullable<double> gt;

  final _i2.PrismaNullable<double> gte;

  final _i2.PrismaNullable<NestedFloatNullableWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntNullableFilter> $count;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $avg;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $sum;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $min;

  final _i2.PrismaNullable<NestedFloatNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
      '_count': $count,
      '_avg': $avg,
      '_sum': $sum,
      '_min': $min,
      '_max': $max,
    };
  }
}

class NestedIntNullableFilter implements _i2.JsonSerializable {
  const NestedIntNullableFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.not,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<int, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<int>> in$;

  final _i2.PrismaNullable<List<int>> notIn;

  final _i2.PrismaNullable<int> lt;

  final _i2.PrismaNullable<int> lte;

  final _i2.PrismaNullable<int> gt;

  final _i2.PrismaNullable<int> gte;

  final _i2.PrismaNullable<NestedIntNullableFilter> not;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'not': not,
    };
  }
}

class NestedStringNullableWithAggregatesFilter implements _i2.JsonSerializable {
  const NestedStringNullableWithAggregatesFilter({
    this.equals,
    this.in$,
    this.notIn,
    this.lt,
    this.lte,
    this.gt,
    this.gte,
    this.contains,
    this.startsWith,
    this.endsWith,
    this.not,
    this.$count,
    this.$min,
    this.$max,
  });

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> equals;

  final _i2.PrismaNullable<List<String>> in$;

  final _i2.PrismaNullable<List<String>> notIn;

  final _i2.PrismaNullable<String> lt;

  final _i2.PrismaNullable<String> lte;

  final _i2.PrismaNullable<String> gt;

  final _i2.PrismaNullable<String> gte;

  final _i2.PrismaNullable<String> contains;

  final _i2.PrismaNullable<String> startsWith;

  final _i2.PrismaNullable<String> endsWith;

  final _i2.PrismaNullable<NestedStringNullableWithAggregatesFilter> not;

  final _i2.PrismaNullable<NestedIntNullableFilter> $count;

  final _i2.PrismaNullable<NestedStringNullableFilter> $min;

  final _i2.PrismaNullable<NestedStringNullableFilter> $max;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'equals': equals,
      'in': in$,
      'notIn': notIn,
      'lt': lt,
      'lte': lte,
      'gt': gt,
      'gte': gte,
      'contains': contains,
      'startsWith': startsWith,
      'endsWith': endsWith,
      'not': not,
      '_count': $count,
      '_min': $min,
      '_max': $max,
    };
  }
}

class PointsCreateWithoutGameInput implements _i2.JsonSerializable {
  const PointsCreateWithoutGameInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.launch,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<LaunchCreateNestedManyWithoutPointsInput> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'launch': launch,
    };
  }
}

class PointsUncheckedCreateWithoutGameInput implements _i2.JsonSerializable {
  const PointsUncheckedCreateWithoutGameInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.launch,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<LaunchUncheckedCreateNestedManyWithoutPointsInput>
      launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'launch': launch,
    };
  }
}

class PointsCreateOrConnectWithoutGameInput implements _i2.JsonSerializable {
  const PointsCreateOrConnectWithoutGameInput({
    required this.where,
    required this.create,
  });

  final PointsWhereUniqueInput where;

  final PointsCreateWithoutGameInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PointsCreateManyGameInputEnvelope implements _i2.JsonSerializable {
  const PointsCreateManyGameInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<PointsCreateManyGameInput> data;

  final _i2.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class RankingPointCreateWithoutGameInput implements _i2.JsonSerializable {
  const RankingPointCreateWithoutGameInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointUncheckedCreateWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUncheckedCreateWithoutGameInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointCreateOrConnectWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointCreateOrConnectWithoutGameInput({
    required this.where,
    required this.create,
  });

  final RankingPointWhereUniqueInput where;

  final RankingPointCreateWithoutGameInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class RankingPointCreateManyGameInputEnvelope implements _i2.JsonSerializable {
  const RankingPointCreateManyGameInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<RankingPointCreateManyGameInput> data;

  final _i2.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class PointsUpsertWithWhereUniqueWithoutGameInput
    implements _i2.JsonSerializable {
  const PointsUpsertWithWhereUniqueWithoutGameInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final PointsWhereUniqueInput where;

  final PointsUpdateWithoutGameInput update;

  final PointsCreateWithoutGameInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class PointsUpdateWithWhereUniqueWithoutGameInput
    implements _i2.JsonSerializable {
  const PointsUpdateWithWhereUniqueWithoutGameInput({
    required this.where,
    required this.data,
  });

  final PointsWhereUniqueInput where;

  final PointsUpdateWithoutGameInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PointsUpdateManyWithWhereWithoutGameInput
    implements _i2.JsonSerializable {
  const PointsUpdateManyWithWhereWithoutGameInput({
    required this.where,
    required this.data,
  });

  final PointsScalarWhereInput where;

  final PointsUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class PointsScalarWhereInput implements _i2.JsonSerializable {
  const PointsScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<PointsScalarWhereInput> AND;

  final _i2.PrismaNullable<List<PointsScalarWhereInput>> OR;

  final _i2.PrismaNullable<PointsScalarWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<BoolFilter> isAuto;

  final _i2.PrismaNullable<StringFilter> pointType;

  final _i2.PrismaNullable<IntFilter> pointValue;

  final _i2.PrismaNullable<FloatNullableFilter> left;

  final _i2.PrismaNullable<FloatNullableFilter> top;

  final _i2.PrismaNullable<StringNullableFilter> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class RankingPointUpsertWithWhereUniqueWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUpsertWithWhereUniqueWithoutGameInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final RankingPointWhereUniqueInput where;

  final RankingPointUpdateWithoutGameInput update;

  final RankingPointCreateWithoutGameInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class RankingPointUpdateWithWhereUniqueWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUpdateWithWhereUniqueWithoutGameInput({
    required this.where,
    required this.data,
  });

  final RankingPointWhereUniqueInput where;

  final RankingPointUpdateWithoutGameInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class RankingPointUpdateManyWithWhereWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUpdateManyWithWhereWithoutGameInput({
    required this.where,
    required this.data,
  });

  final RankingPointScalarWhereInput where;

  final RankingPointUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class RankingPointScalarWhereInput implements _i2.JsonSerializable {
  const RankingPointScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  final _i2.PrismaNullable<RankingPointScalarWhereInput> AND;

  final _i2.PrismaNullable<List<RankingPointScalarWhereInput>> OR;

  final _i2.PrismaNullable<RankingPointScalarWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<StringFilter> type;

  final _i2.PrismaNullable<IntFilter> numberScore;

  final _i2.PrismaNullable<IntFilter> minScore;

  final _i2.PrismaNullable<IntFilter> maxScore;

  final _i2.PrismaNullable<StringFilter> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
      'gameId': gameId,
    };
  }
}

class PointsCreateWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsCreateWithoutLaunchInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.game,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<GameCreateNestedOneWithoutPointsInput> game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'game': game,
    };
  }
}

class PointsUncheckedCreateWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsUncheckedCreateWithoutLaunchInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  final _i2.PrismaNullable<_i2.PrismaUnion<String, _i2.PrismaNull>> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class PointsCreateOrConnectWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsCreateOrConnectWithoutLaunchInput({
    required this.where,
    required this.create,
  });

  final PointsWhereUniqueInput where;

  final PointsCreateWithoutLaunchInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class PointsUpsertWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsUpsertWithoutLaunchInput({
    required this.update,
    required this.create,
  });

  final PointsUpdateWithoutLaunchInput update;

  final PointsCreateWithoutLaunchInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class PointsUpdateWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsUpdateWithoutLaunchInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.game,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<GameUpdateOneWithoutPointsNestedInput> game;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'game': game,
    };
  }
}

class PointsUncheckedUpdateWithoutLaunchInput implements _i2.JsonSerializable {
  const PointsUncheckedUpdateWithoutLaunchInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<NullableStringFieldUpdateOperationsInput> gameId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'gameId': gameId,
    };
  }
}

class GameCreateWithoutPointsInput implements _i2.JsonSerializable {
  const GameCreateWithoutPointsInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.rankingPoint,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2.PrismaNullable<RankingPointCreateNestedManyWithoutGameInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameUncheckedCreateWithoutPointsInput implements _i2.JsonSerializable {
  const GameUncheckedCreateWithoutPointsInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.rankingPoint,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2
          .PrismaNullable<RankingPointUncheckedCreateNestedManyWithoutGameInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameCreateOrConnectWithoutPointsInput implements _i2.JsonSerializable {
  const GameCreateOrConnectWithoutPointsInput({
    required this.where,
    required this.create,
  });

  final GameWhereUniqueInput where;

  final GameCreateWithoutPointsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class LaunchCreateWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchCreateWithoutPointsInput({
    required this.id,
    required this.type,
  });

  final String id;

  final LaunchStatus type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchUncheckedCreateWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchUncheckedCreateWithoutPointsInput({
    required this.id,
    required this.type,
  });

  final String id;

  final LaunchStatus type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchCreateOrConnectWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchCreateOrConnectWithoutPointsInput({
    required this.where,
    required this.create,
  });

  final LaunchWhereUniqueInput where;

  final LaunchCreateWithoutPointsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class LaunchCreateManyPointsInputEnvelope implements _i2.JsonSerializable {
  const LaunchCreateManyPointsInputEnvelope({
    required this.data,
    this.skipDuplicates,
  });

  final List<LaunchCreateManyPointsInput> data;

  final _i2.PrismaNullable<bool> skipDuplicates;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'data': data,
      'skipDuplicates': skipDuplicates,
    };
  }
}

class GameUpsertWithoutPointsInput implements _i2.JsonSerializable {
  const GameUpsertWithoutPointsInput({
    required this.update,
    required this.create,
  });

  final GameUpdateWithoutPointsInput update;

  final GameCreateWithoutPointsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class GameUpdateWithoutPointsInput implements _i2.JsonSerializable {
  const GameUpdateWithoutPointsInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2.PrismaNullable<RankingPointUpdateManyWithoutGameNestedInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'rankingPoint': rankingPoint,
    };
  }
}

class GameUncheckedUpdateWithoutPointsInput implements _i2.JsonSerializable {
  const GameUncheckedUpdateWithoutPointsInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.rankingPoint,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2
          .PrismaNullable<RankingPointUncheckedUpdateManyWithoutGameNestedInput>
      rankingPoint;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'rankingPoint': rankingPoint,
    };
  }
}

class LaunchUpsertWithWhereUniqueWithoutPointsInput
    implements _i2.JsonSerializable {
  const LaunchUpsertWithWhereUniqueWithoutPointsInput({
    required this.where,
    required this.update,
    required this.create,
  });

  final LaunchWhereUniqueInput where;

  final LaunchUpdateWithoutPointsInput update;

  final LaunchCreateWithoutPointsInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'update': update,
      'create': create,
    };
  }
}

class LaunchUpdateWithWhereUniqueWithoutPointsInput
    implements _i2.JsonSerializable {
  const LaunchUpdateWithWhereUniqueWithoutPointsInput({
    required this.where,
    required this.data,
  });

  final LaunchWhereUniqueInput where;

  final LaunchUpdateWithoutPointsInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class LaunchUpdateManyWithWhereWithoutPointsInput
    implements _i2.JsonSerializable {
  const LaunchUpdateManyWithWhereWithoutPointsInput({
    required this.where,
    required this.data,
  });

  final LaunchScalarWhereInput where;

  final LaunchUpdateManyMutationInput data;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'data': data,
    };
  }
}

class LaunchScalarWhereInput implements _i2.JsonSerializable {
  const LaunchScalarWhereInput({
    this.AND,
    this.OR,
    this.NOT,
    this.id,
    this.type,
    this.markerId,
  });

  final _i2.PrismaNullable<LaunchScalarWhereInput> AND;

  final _i2.PrismaNullable<List<LaunchScalarWhereInput>> OR;

  final _i2.PrismaNullable<LaunchScalarWhereInput> NOT;

  final _i2.PrismaNullable<StringFilter> id;

  final _i2.PrismaNullable<EnumlaunchStatusFilter> type;

  final _i2.PrismaNullable<StringFilter> markerId;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'AND': AND,
      'OR': OR,
      'NOT': NOT,
      'id': id,
      'type': type,
      'markerId': markerId,
    };
  }
}

class GameCreateWithoutRankingPointInput implements _i2.JsonSerializable {
  const GameCreateWithoutRankingPointInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.points,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2.PrismaNullable<PointsCreateNestedManyWithoutGameInput> points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
    };
  }
}

class GameUncheckedCreateWithoutRankingPointInput
    implements _i2.JsonSerializable {
  const GameUncheckedCreateWithoutRankingPointInput({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    this.version,
    this.createdAt,
    required this.updatedAt,
    this.points,
  });

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final DateTime updatedAt;

  final _i2.PrismaNullable<PointsUncheckedCreateNestedManyWithoutGameInput>
      points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
    };
  }
}

class GameCreateOrConnectWithoutRankingPointInput
    implements _i2.JsonSerializable {
  const GameCreateOrConnectWithoutRankingPointInput({
    required this.where,
    required this.create,
  });

  final GameWhereUniqueInput where;

  final GameCreateWithoutRankingPointInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'where': where,
      'create': create,
    };
  }
}

class GameUpsertWithoutRankingPointInput implements _i2.JsonSerializable {
  const GameUpsertWithoutRankingPointInput({
    required this.update,
    required this.create,
  });

  final GameUpdateWithoutRankingPointInput update;

  final GameCreateWithoutRankingPointInput create;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'update': update,
      'create': create,
    };
  }
}

class GameUpdateWithoutRankingPointInput implements _i2.JsonSerializable {
  const GameUpdateWithoutRankingPointInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2.PrismaNullable<PointsUpdateManyWithoutGameNestedInput> points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
    };
  }
}

class GameUncheckedUpdateWithoutRankingPointInput
    implements _i2.JsonSerializable {
  const GameUncheckedUpdateWithoutRankingPointInput({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
    this.points,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> name;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> tournament;

  final _i2.PrismaNullable<EnumWinFieldUpdateOperationsInput> weWin;

  final _i2.PrismaNullable<EnumTeamFieldUpdateOperationsInput> ourTeam;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> version;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> createdAt;

  final _i2.PrismaNullable<DateTimeFieldUpdateOperationsInput> updatedAt;

  final _i2.PrismaNullable<PointsUncheckedUpdateManyWithoutGameNestedInput>
      points;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'name': name,
      'tournament': tournament,
      'weWin': weWin,
      'ourTeam': ourTeam,
      'version': version,
      'createdAt': createdAt,
      'updatedAt': updatedAt,
      'points': points,
    };
  }
}

class PointsCreateManyGameInput implements _i2.JsonSerializable {
  const PointsCreateManyGameInput({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
  });

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> left;

  final _i2.PrismaNullable<_i2.PrismaUnion<double, _i2.PrismaNull>> top;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
    };
  }
}

class RankingPointCreateManyGameInput implements _i2.JsonSerializable {
  const RankingPointCreateManyGameInput({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
  });

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class PointsUpdateWithoutGameInput implements _i2.JsonSerializable {
  const PointsUpdateWithoutGameInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.launch,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<LaunchUpdateManyWithoutPointsNestedInput> launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'launch': launch,
    };
  }
}

class PointsUncheckedUpdateWithoutGameInput implements _i2.JsonSerializable {
  const PointsUncheckedUpdateWithoutGameInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.launch,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  final _i2.PrismaNullable<LaunchUncheckedUpdateManyWithoutPointsNestedInput>
      launch;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
      'launch': launch,
    };
  }
}

class PointsUncheckedUpdateManyWithoutPointsInput
    implements _i2.JsonSerializable {
  const PointsUncheckedUpdateManyWithoutPointsInput({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<BoolFieldUpdateOperationsInput> isAuto;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> pointType;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> pointValue;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> left;

  final _i2.PrismaNullable<NullableFloatFieldUpdateOperationsInput> top;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'isAuto': isAuto,
      'pointType': pointType,
      'pointValue': pointValue,
      'left': left,
      'top': top,
    };
  }
}

class RankingPointUpdateWithoutGameInput implements _i2.JsonSerializable {
  const RankingPointUpdateWithoutGameInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointUncheckedUpdateWithoutGameInput
    implements _i2.JsonSerializable {
  const RankingPointUncheckedUpdateWithoutGameInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class RankingPointUncheckedUpdateManyWithoutRankingPointInput
    implements _i2.JsonSerializable {
  const RankingPointUncheckedUpdateManyWithoutRankingPointInput({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> type;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> numberScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> minScore;

  final _i2.PrismaNullable<IntFieldUpdateOperationsInput> maxScore;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
      'numberScore': numberScore,
      'minScore': minScore,
      'maxScore': maxScore,
    };
  }
}

class LaunchCreateManyPointsInput implements _i2.JsonSerializable {
  const LaunchCreateManyPointsInput({
    required this.id,
    required this.type,
  });

  final String id;

  final LaunchStatus type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchUpdateWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchUpdateWithoutPointsInput({
    this.id,
    this.type,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchUncheckedUpdateWithoutPointsInput implements _i2.JsonSerializable {
  const LaunchUncheckedUpdateWithoutPointsInput({
    this.id,
    this.type,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

class LaunchUncheckedUpdateManyWithoutLaunchInput
    implements _i2.JsonSerializable {
  const LaunchUncheckedUpdateManyWithoutLaunchInput({
    this.id,
    this.type,
  });

  final _i2.PrismaNullable<StringFieldUpdateOperationsInput> id;

  final _i2.PrismaNullable<EnumlaunchStatusFieldUpdateOperationsInput> type;

  @override
  Map<String, dynamic> toJson() {
    return <String, dynamic>{
      'id': id,
      'type': type,
    };
  }
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateGame implements _i2.JsonSerializable {
  const AggregateGame({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateGame.fromJson(Map<String, dynamic> json) =>
      _$AggregateGameFromJson(json);

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<GameCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<GameAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<GameSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<GameMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<GameMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateGameToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameGroupByOutputType implements _i2.JsonSerializable {
  const GameGroupByOutputType({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    required this.version,
    required this.createdAt,
    required this.updatedAt,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory GameGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameGroupByOutputTypeFromJson(json);

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final int version;

  final DateTime createdAt;

  final DateTime updatedAt;

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<GameCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<GameAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<GameSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<GameMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<GameMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$GameGroupByOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateLaunch implements _i2.JsonSerializable {
  const AggregateLaunch({
    this.$count,
    this.$min,
    this.$max,
  });

  factory AggregateLaunch.fromJson(Map<String, dynamic> json) =>
      _$AggregateLaunchFromJson(json);

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<LaunchCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<LaunchMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<LaunchMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateLaunchToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class LaunchGroupByOutputType implements _i2.JsonSerializable {
  const LaunchGroupByOutputType({
    required this.id,
    required this.type,
    required this.markerId,
    this.$count,
    this.$min,
    this.$max,
  });

  factory LaunchGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$LaunchGroupByOutputTypeFromJson(json);

  final String id;

  final LaunchStatus type;

  final String markerId;

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<LaunchCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<LaunchMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<LaunchMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$LaunchGroupByOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregatePoints implements _i2.JsonSerializable {
  const AggregatePoints({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregatePoints.fromJson(Map<String, dynamic> json) =>
      _$AggregatePointsFromJson(json);

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<PointsCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<PointsAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<PointsSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<PointsMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<PointsMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregatePointsToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsGroupByOutputType implements _i2.JsonSerializable {
  const PointsGroupByOutputType({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.gameId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory PointsGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsGroupByOutputTypeFromJson(json);

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  final _i2.PrismaNullable<String> gameId;

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<PointsCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<PointsAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<PointsSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<PointsMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<PointsMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$PointsGroupByOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AggregateRankingPoint implements _i2.JsonSerializable {
  const AggregateRankingPoint({
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory AggregateRankingPoint.fromJson(Map<String, dynamic> json) =>
      _$AggregateRankingPointFromJson(json);

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<RankingPointCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<RankingPointAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<RankingPointSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<RankingPointMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<RankingPointMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$AggregateRankingPointToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointGroupByOutputType implements _i2.JsonSerializable {
  const RankingPointGroupByOutputType({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.gameId,
    this.$count,
    this.$avg,
    this.$sum,
    this.$min,
    this.$max,
  });

  factory RankingPointGroupByOutputType.fromJson(Map<String, dynamic> json) =>
      _$RankingPointGroupByOutputTypeFromJson(json);

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final String gameId;

  @_i1.JsonKey(name: '_count')
  final _i2.PrismaNullable<RankingPointCountAggregateOutputType> $count;

  @_i1.JsonKey(name: '_avg')
  final _i2.PrismaNullable<RankingPointAvgAggregateOutputType> $avg;

  @_i1.JsonKey(name: '_sum')
  final _i2.PrismaNullable<RankingPointSumAggregateOutputType> $sum;

  @_i1.JsonKey(name: '_min')
  final _i2.PrismaNullable<RankingPointMinAggregateOutputType> $min;

  @_i1.JsonKey(name: '_max')
  final _i2.PrismaNullable<RankingPointMaxAggregateOutputType> $max;

  @override
  Map<String, dynamic> toJson() => _$RankingPointGroupByOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class AffectedRowsOutput implements _i2.JsonSerializable {
  const AffectedRowsOutput({required this.count});

  factory AffectedRowsOutput.fromJson(Map<String, dynamic> json) =>
      _$AffectedRowsOutputFromJson(json);

  final int count;

  @override
  Map<String, dynamic> toJson() => _$AffectedRowsOutputToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameCountOutputType implements _i2.JsonSerializable {
  const GameCountOutputType({
    required this.points,
    required this.rankingPoint,
  });

  factory GameCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameCountOutputTypeFromJson(json);

  final int points;

  final int rankingPoint;

  @override
  Map<String, dynamic> toJson() => _$GameCountOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameCountAggregateOutputType implements _i2.JsonSerializable {
  const GameCountAggregateOutputType({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    required this.version,
    required this.createdAt,
    required this.updatedAt,
    required this.$all,
  });

  factory GameCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameCountAggregateOutputTypeFromJson(json);

  final int id;

  final int name;

  final int tournament;

  final int weWin;

  final int ourTeam;

  final int version;

  final int createdAt;

  final int updatedAt;

  @_i1.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$GameCountAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameAvgAggregateOutputType implements _i2.JsonSerializable {
  const GameAvgAggregateOutputType({this.version});

  factory GameAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameAvgAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<double> version;

  @override
  Map<String, dynamic> toJson() => _$GameAvgAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameSumAggregateOutputType implements _i2.JsonSerializable {
  const GameSumAggregateOutputType({this.version});

  factory GameSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameSumAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<int> version;

  @override
  Map<String, dynamic> toJson() => _$GameSumAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameMinAggregateOutputType implements _i2.JsonSerializable {
  const GameMinAggregateOutputType({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  factory GameMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameMinAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<String> name;

  final _i2.PrismaNullable<String> tournament;

  final _i2.PrismaNullable<WinType> weWin;

  final _i2.PrismaNullable<Team> ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final _i2.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() => _$GameMinAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class GameMaxAggregateOutputType implements _i2.JsonSerializable {
  const GameMaxAggregateOutputType({
    this.id,
    this.name,
    this.tournament,
    this.weWin,
    this.ourTeam,
    this.version,
    this.createdAt,
    this.updatedAt,
  });

  factory GameMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$GameMaxAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<String> name;

  final _i2.PrismaNullable<String> tournament;

  final _i2.PrismaNullable<WinType> weWin;

  final _i2.PrismaNullable<Team> ourTeam;

  final _i2.PrismaNullable<int> version;

  final _i2.PrismaNullable<DateTime> createdAt;

  final _i2.PrismaNullable<DateTime> updatedAt;

  @override
  Map<String, dynamic> toJson() => _$GameMaxAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class LaunchCountAggregateOutputType implements _i2.JsonSerializable {
  const LaunchCountAggregateOutputType({
    required this.id,
    required this.type,
    required this.markerId,
    required this.$all,
  });

  factory LaunchCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$LaunchCountAggregateOutputTypeFromJson(json);

  final int id;

  final int type;

  final int markerId;

  @_i1.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$LaunchCountAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class LaunchMinAggregateOutputType implements _i2.JsonSerializable {
  const LaunchMinAggregateOutputType({
    this.id,
    this.type,
    this.markerId,
  });

  factory LaunchMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$LaunchMinAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<LaunchStatus> type;

  final _i2.PrismaNullable<String> markerId;

  @override
  Map<String, dynamic> toJson() => _$LaunchMinAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class LaunchMaxAggregateOutputType implements _i2.JsonSerializable {
  const LaunchMaxAggregateOutputType({
    this.id,
    this.type,
    this.markerId,
  });

  factory LaunchMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$LaunchMaxAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<LaunchStatus> type;

  final _i2.PrismaNullable<String> markerId;

  @override
  Map<String, dynamic> toJson() => _$LaunchMaxAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsCountOutputType implements _i2.JsonSerializable {
  const PointsCountOutputType({required this.launch});

  factory PointsCountOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsCountOutputTypeFromJson(json);

  final int launch;

  @override
  Map<String, dynamic> toJson() => _$PointsCountOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsCountAggregateOutputType implements _i2.JsonSerializable {
  const PointsCountAggregateOutputType({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    required this.left,
    required this.top,
    required this.gameId,
    required this.$all,
  });

  factory PointsCountAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsCountAggregateOutputTypeFromJson(json);

  final int id;

  final int isAuto;

  final int pointType;

  final int pointValue;

  final int left;

  final int top;

  final int gameId;

  @_i1.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() => _$PointsCountAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsAvgAggregateOutputType implements _i2.JsonSerializable {
  const PointsAvgAggregateOutputType({
    this.pointValue,
    this.left,
    this.top,
  });

  factory PointsAvgAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsAvgAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<double> pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  @override
  Map<String, dynamic> toJson() => _$PointsAvgAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsSumAggregateOutputType implements _i2.JsonSerializable {
  const PointsSumAggregateOutputType({
    this.pointValue,
    this.left,
    this.top,
  });

  factory PointsSumAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsSumAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<int> pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  @override
  Map<String, dynamic> toJson() => _$PointsSumAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsMinAggregateOutputType implements _i2.JsonSerializable {
  const PointsMinAggregateOutputType({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  factory PointsMinAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsMinAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<bool> isAuto;

  final _i2.PrismaNullable<String> pointType;

  final _i2.PrismaNullable<int> pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  final _i2.PrismaNullable<String> gameId;

  @override
  Map<String, dynamic> toJson() => _$PointsMinAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class PointsMaxAggregateOutputType implements _i2.JsonSerializable {
  const PointsMaxAggregateOutputType({
    this.id,
    this.isAuto,
    this.pointType,
    this.pointValue,
    this.left,
    this.top,
    this.gameId,
  });

  factory PointsMaxAggregateOutputType.fromJson(Map<String, dynamic> json) =>
      _$PointsMaxAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<bool> isAuto;

  final _i2.PrismaNullable<String> pointType;

  final _i2.PrismaNullable<int> pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  final _i2.PrismaNullable<String> gameId;

  @override
  Map<String, dynamic> toJson() => _$PointsMaxAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointCountAggregateOutputType implements _i2.JsonSerializable {
  const RankingPointCountAggregateOutputType({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.gameId,
    required this.$all,
  });

  factory RankingPointCountAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$RankingPointCountAggregateOutputTypeFromJson(json);

  final int id;

  final int type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final int gameId;

  @_i1.JsonKey(name: '_all')
  final int $all;

  @override
  Map<String, dynamic> toJson() =>
      _$RankingPointCountAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointAvgAggregateOutputType implements _i2.JsonSerializable {
  const RankingPointAvgAggregateOutputType({
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  factory RankingPointAvgAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$RankingPointAvgAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<double> numberScore;

  final _i2.PrismaNullable<double> minScore;

  final _i2.PrismaNullable<double> maxScore;

  @override
  Map<String, dynamic> toJson() =>
      _$RankingPointAvgAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointSumAggregateOutputType implements _i2.JsonSerializable {
  const RankingPointSumAggregateOutputType({
    this.numberScore,
    this.minScore,
    this.maxScore,
  });

  factory RankingPointSumAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$RankingPointSumAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<int> numberScore;

  final _i2.PrismaNullable<int> minScore;

  final _i2.PrismaNullable<int> maxScore;

  @override
  Map<String, dynamic> toJson() =>
      _$RankingPointSumAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointMinAggregateOutputType implements _i2.JsonSerializable {
  const RankingPointMinAggregateOutputType({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  factory RankingPointMinAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$RankingPointMinAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<String> type;

  final _i2.PrismaNullable<int> numberScore;

  final _i2.PrismaNullable<int> minScore;

  final _i2.PrismaNullable<int> maxScore;

  final _i2.PrismaNullable<String> gameId;

  @override
  Map<String, dynamic> toJson() =>
      _$RankingPointMinAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPointMaxAggregateOutputType implements _i2.JsonSerializable {
  const RankingPointMaxAggregateOutputType({
    this.id,
    this.type,
    this.numberScore,
    this.minScore,
    this.maxScore,
    this.gameId,
  });

  factory RankingPointMaxAggregateOutputType.fromJson(
          Map<String, dynamic> json) =>
      _$RankingPointMaxAggregateOutputTypeFromJson(json);

  final _i2.PrismaNullable<String> id;

  final _i2.PrismaNullable<String> type;

  final _i2.PrismaNullable<int> numberScore;

  final _i2.PrismaNullable<int> minScore;

  final _i2.PrismaNullable<int> maxScore;

  final _i2.PrismaNullable<String> gameId;

  @override
  Map<String, dynamic> toJson() =>
      _$RankingPointMaxAggregateOutputTypeToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Game implements _i2.JsonSerializable {
  const Game({
    required this.id,
    required this.name,
    required this.tournament,
    required this.weWin,
    required this.ourTeam,
    required this.version,
    required this.createdAt,
    required this.updatedAt,
    required this.$count,
  });

  factory Game.fromJson(Map<String, dynamic> json) => _$GameFromJson(json);

  final String id;

  final String name;

  final String tournament;

  final WinType weWin;

  final Team ourTeam;

  final int version;

  final DateTime createdAt;

  final DateTime updatedAt;

  @_i1.JsonKey(name: '_count')
  final GameCountOutputType $count;

  @override
  Map<String, dynamic> toJson() => _$GameToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Launch implements _i2.JsonSerializable {
  const Launch({
    required this.id,
    required this.type,
    required this.markerId,
  });

  factory Launch.fromJson(Map<String, dynamic> json) => _$LaunchFromJson(json);

  final String id;

  final LaunchStatus type;

  final String markerId;

  @override
  Map<String, dynamic> toJson() => _$LaunchToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class Points implements _i2.JsonSerializable {
  const Points({
    required this.id,
    required this.isAuto,
    required this.pointType,
    required this.pointValue,
    this.left,
    this.top,
    this.gameId,
    required this.$count,
  });

  factory Points.fromJson(Map<String, dynamic> json) => _$PointsFromJson(json);

  final String id;

  final bool isAuto;

  final String pointType;

  final int pointValue;

  final _i2.PrismaNullable<double> left;

  final _i2.PrismaNullable<double> top;

  final _i2.PrismaNullable<String> gameId;

  @_i1.JsonKey(name: '_count')
  final PointsCountOutputType $count;

  @override
  Map<String, dynamic> toJson() => _$PointsToJson(this);
}

@_i1.JsonSerializable(
  createToJson: true,
  createFactory: true,
  explicitToJson: true,
)
class RankingPoint implements _i2.JsonSerializable {
  const RankingPoint({
    required this.id,
    required this.type,
    required this.numberScore,
    required this.minScore,
    required this.maxScore,
    required this.gameId,
  });

  factory RankingPoint.fromJson(Map<String, dynamic> json) =>
      _$RankingPointFromJson(json);

  final String id;

  final String type;

  final int numberScore;

  final int minScore;

  final int maxScore;

  final String gameId;

  @override
  Map<String, dynamic> toJson() => _$RankingPointToJson(this);
}

class GameDelegate {
  const GameDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i2.Engine _engine;

  final _i2.PrismaNullable<_i2.QueryEngineRequestHeaders> _headers;

  Future<_i2.PrismaNullable<Game>> findUnique(
      {required GameWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findUniquegame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquegame'] == null
        ? null
        : Game.fromJson((result.data['findUniquegame'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Game>> findFirst({
    _i2.PrismaNullable<GameWhereInput> where,
    _i2.PrismaNullable<List<GameOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<GameWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<GameScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findFirstgame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstgame'] == null
        ? null
        : Game.fromJson((result.data['findFirstgame'] as Map).cast());
  }

  Future<List<Game>> findMany({
    _i2.PrismaNullable<GameWhereInput> where,
    _i2.PrismaNullable<List<GameOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<GameWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<GameScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findManygame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManygame'] as List)
        .whereType<Map>()
        .map((Map e) => Game.fromJson(e.cast()))
        .toList();
  }

  Future<Game> create({required GameCreateInput data}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createOnegame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Game.fromJson((result.data['createOnegame'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<GameCreateManyInput> data,
    _i2.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createManygame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManygame'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Game>> update({
    required GameUpdateInput data,
    required GameWhereUniqueInput where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateOnegame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnegame'] == null
        ? null
        : Game.fromJson((result.data['updateOnegame'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required GameUpdateManyMutationInput data,
    _i2.PrismaNullable<GameWhereInput> where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateManygame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManygame'] as Map).cast());
  }

  Future<Game> upsert({
    required GameWhereUniqueInput where,
    required GameCreateInput create,
    required GameUpdateInput update,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'upsertOnegame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Game.fromJson((result.data['upsertOnegame'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Game>> delete(
      {required GameWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteOnegame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnegame'] == null
        ? null
        : Game.fromJson((result.data['deleteOnegame'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i2.PrismaNullable<GameWhereInput> where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteManygame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManygame'] as Map).cast());
  }

  Future<AggregateGame> aggregate({
    _i2.PrismaNullable<GameWhereInput> where,
    _i2.PrismaNullable<List<GameOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<GameWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'aggregategame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateGame.fromJson((result.data['aggregategame'] as Map).cast());
  }

  Future<List<GameGroupByOutputType>> groupBy({
    _i2.PrismaNullable<GameWhereInput> where,
    _i2.PrismaNullable<List<GameOrderByWithAggregationInput>> orderBy,
    required List<GameScalarFieldEnum> by,
    _i2.PrismaNullable<GameScalarWhereWithAggregatesInput> having,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'groupBygame',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(GameScalarFieldEnum.values
              .map((GameScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupBygame'] as List)
        .whereType<Map>()
        .map((Map e) => GameGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class LaunchDelegate {
  const LaunchDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i2.Engine _engine;

  final _i2.PrismaNullable<_i2.QueryEngineRequestHeaders> _headers;

  Future<_i2.PrismaNullable<Launch>> findUnique(
      {required LaunchWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findUniquelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquelaunch'] == null
        ? null
        : Launch.fromJson((result.data['findUniquelaunch'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Launch>> findFirst({
    _i2.PrismaNullable<LaunchWhereInput> where,
    _i2.PrismaNullable<List<LaunchOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<LaunchWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<LaunchScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findFirstlaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstlaunch'] == null
        ? null
        : Launch.fromJson((result.data['findFirstlaunch'] as Map).cast());
  }

  Future<List<Launch>> findMany({
    _i2.PrismaNullable<LaunchWhereInput> where,
    _i2.PrismaNullable<List<LaunchOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<LaunchWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<LaunchScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findManylaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManylaunch'] as List)
        .whereType<Map>()
        .map((Map e) => Launch.fromJson(e.cast()))
        .toList();
  }

  Future<Launch> create({required LaunchCreateInput data}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createOnelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Launch.fromJson((result.data['createOnelaunch'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<LaunchCreateManyInput> data,
    _i2.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createManylaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManylaunch'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Launch>> update({
    required LaunchUpdateInput data,
    required LaunchWhereUniqueInput where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateOnelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnelaunch'] == null
        ? null
        : Launch.fromJson((result.data['updateOnelaunch'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required LaunchUpdateManyMutationInput data,
    _i2.PrismaNullable<LaunchWhereInput> where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateManylaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManylaunch'] as Map).cast());
  }

  Future<Launch> upsert({
    required LaunchWhereUniqueInput where,
    required LaunchCreateInput create,
    required LaunchUpdateInput update,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'upsertOnelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Launch.fromJson((result.data['upsertOnelaunch'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Launch>> delete(
      {required LaunchWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteOnelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnelaunch'] == null
        ? null
        : Launch.fromJson((result.data['deleteOnelaunch'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i2.PrismaNullable<LaunchWhereInput> where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteManylaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManylaunch'] as Map).cast());
  }

  Future<AggregateLaunch> aggregate({
    _i2.PrismaNullable<LaunchWhereInput> where,
    _i2.PrismaNullable<List<LaunchOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<LaunchWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'aggregatelaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateLaunch.fromJson(
        (result.data['aggregatelaunch'] as Map).cast());
  }

  Future<List<LaunchGroupByOutputType>> groupBy({
    _i2.PrismaNullable<LaunchWhereInput> where,
    _i2.PrismaNullable<List<LaunchOrderByWithAggregationInput>> orderBy,
    required List<LaunchScalarFieldEnum> by,
    _i2.PrismaNullable<LaunchScalarWhereWithAggregatesInput> having,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'groupBylaunch',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(LaunchScalarFieldEnum.values
              .map((LaunchScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupBylaunch'] as List)
        .whereType<Map>()
        .map((Map e) => LaunchGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class PointsDelegate {
  const PointsDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i2.Engine _engine;

  final _i2.PrismaNullable<_i2.QueryEngineRequestHeaders> _headers;

  Future<_i2.PrismaNullable<Points>> findUnique(
      {required PointsWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findUniquepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquepoints'] == null
        ? null
        : Points.fromJson((result.data['findUniquepoints'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Points>> findFirst({
    _i2.PrismaNullable<PointsWhereInput> where,
    _i2.PrismaNullable<List<PointsOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<PointsWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<PointsScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findFirstpoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstpoints'] == null
        ? null
        : Points.fromJson((result.data['findFirstpoints'] as Map).cast());
  }

  Future<List<Points>> findMany({
    _i2.PrismaNullable<PointsWhereInput> where,
    _i2.PrismaNullable<List<PointsOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<PointsWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<PointsScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findManypoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManypoints'] as List)
        .whereType<Map>()
        .map((Map e) => Points.fromJson(e.cast()))
        .toList();
  }

  Future<Points> create({required PointsCreateInput data}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createOnepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Points.fromJson((result.data['createOnepoints'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<PointsCreateManyInput> data,
    _i2.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createManypoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManypoints'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Points>> update({
    required PointsUpdateInput data,
    required PointsWhereUniqueInput where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateOnepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnepoints'] == null
        ? null
        : Points.fromJson((result.data['updateOnepoints'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required PointsUpdateManyMutationInput data,
    _i2.PrismaNullable<PointsWhereInput> where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateManypoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManypoints'] as Map).cast());
  }

  Future<Points> upsert({
    required PointsWhereUniqueInput where,
    required PointsCreateInput create,
    required PointsUpdateInput update,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'upsertOnepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return Points.fromJson((result.data['upsertOnepoints'] as Map).cast());
  }

  Future<_i2.PrismaNullable<Points>> delete(
      {required PointsWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteOnepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnepoints'] == null
        ? null
        : Points.fromJson((result.data['deleteOnepoints'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i2.PrismaNullable<PointsWhereInput> where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteManypoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManypoints'] as Map).cast());
  }

  Future<AggregatePoints> aggregate({
    _i2.PrismaNullable<PointsWhereInput> where,
    _i2.PrismaNullable<List<PointsOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<PointsWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'aggregatepoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregatePoints.fromJson(
        (result.data['aggregatepoints'] as Map).cast());
  }

  Future<List<PointsGroupByOutputType>> groupBy({
    _i2.PrismaNullable<PointsWhereInput> where,
    _i2.PrismaNullable<List<PointsOrderByWithAggregationInput>> orderBy,
    required List<PointsScalarFieldEnum> by,
    _i2.PrismaNullable<PointsScalarWhereWithAggregatesInput> having,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'groupBypoints',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(PointsScalarFieldEnum.values
              .map((PointsScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupBypoints'] as List)
        .whereType<Map>()
        .map((Map e) => PointsGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

class RankingPointDelegate {
  const RankingPointDelegate._(
    this._engine, [
    this._headers,
  ]);

  final _i2.Engine _engine;

  final _i2.PrismaNullable<_i2.QueryEngineRequestHeaders> _headers;

  Future<_i2.PrismaNullable<RankingPoint>> findUnique(
      {required RankingPointWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findUniquerankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findUniquerankingPoint'] == null
        ? null
        : RankingPoint.fromJson(
            (result.data['findUniquerankingPoint'] as Map).cast());
  }

  Future<_i2.PrismaNullable<RankingPoint>> findFirst({
    _i2.PrismaNullable<RankingPointWhereInput> where,
    _i2.PrismaNullable<List<RankingPointOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<RankingPointWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<RankingPointScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findFirstrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['findFirstrankingPoint'] == null
        ? null
        : RankingPoint.fromJson(
            (result.data['findFirstrankingPoint'] as Map).cast());
  }

  Future<List<RankingPoint>> findMany({
    _i2.PrismaNullable<RankingPointWhereInput> where,
    _i2.PrismaNullable<List<RankingPointOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<RankingPointWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
    _i2.PrismaNullable<List<RankingPointScalarFieldEnum>> distinct,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'findManyrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'distinct',
              distinct,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['findManyrankingPoint'] as List)
        .whereType<Map>()
        .map((Map e) => RankingPoint.fromJson(e.cast()))
        .toList();
  }

  Future<RankingPoint> create({required RankingPointCreateInput data}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createOnerankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return RankingPoint.fromJson(
        (result.data['createOnerankingPoint'] as Map).cast());
  }

  Future<AffectedRowsOutput> createMany({
    required List<RankingPointCreateManyInput> data,
    _i2.PrismaNullable<bool> skipDuplicates,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'createManyrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'skipDuplicates',
              skipDuplicates,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['createManyrankingPoint'] as Map).cast());
  }

  Future<_i2.PrismaNullable<RankingPoint>> update({
    required RankingPointUpdateInput data,
    required RankingPointWhereUniqueInput where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateOnerankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['updateOnerankingPoint'] == null
        ? null
        : RankingPoint.fromJson(
            (result.data['updateOnerankingPoint'] as Map).cast());
  }

  Future<AffectedRowsOutput> updateMany({
    required RankingPointUpdateManyMutationInput data,
    _i2.PrismaNullable<RankingPointWhereInput> where,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'updateManyrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'data',
              data,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['updateManyrankingPoint'] as Map).cast());
  }

  Future<RankingPoint> upsert({
    required RankingPointWhereUniqueInput where,
    required RankingPointCreateInput create,
    required RankingPointUpdateInput update,
  }) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'upsertOnerankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'create',
              create,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'update',
              update,
              isRequired: true,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return RankingPoint.fromJson(
        (result.data['upsertOnerankingPoint'] as Map).cast());
  }

  Future<_i2.PrismaNullable<RankingPoint>> delete(
      {required RankingPointWhereUniqueInput where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteOnerankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: true,
            )
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return result.data['deleteOnerankingPoint'] == null
        ? null
        : RankingPoint.fromJson(
            (result.data['deleteOnerankingPoint'] as Map).cast());
  }

  Future<AffectedRowsOutput> deleteMany(
      {_i2.PrismaNullable<RankingPointWhereInput> where}) async {
    final String sdl = _i2.GraphQLField(
      'mutation',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'deleteManyrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            )
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AffectedRowsOutput.fromJson(
        (result.data['deleteManyrankingPoint'] as Map).cast());
  }

  Future<AggregateRankingPoint> aggregate({
    _i2.PrismaNullable<RankingPointWhereInput> where,
    _i2.PrismaNullable<List<RankingPointOrderByWithRelationInput>> orderBy,
    _i2.PrismaNullable<RankingPointWhereUniqueInput> cursor,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'aggregaterankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'cursor',
              cursor,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return AggregateRankingPoint.fromJson(
        (result.data['aggregaterankingPoint'] as Map).cast());
  }

  Future<List<RankingPointGroupByOutputType>> groupBy({
    _i2.PrismaNullable<RankingPointWhereInput> where,
    _i2.PrismaNullable<List<RankingPointOrderByWithAggregationInput>> orderBy,
    required List<RankingPointScalarFieldEnum> by,
    _i2.PrismaNullable<RankingPointScalarWhereWithAggregatesInput> having,
    _i2.PrismaNullable<int> take,
    _i2.PrismaNullable<int> skip,
  }) async {
    final String sdl = _i2.GraphQLField(
      'query',
      fields: _i2.GraphQLFields([
        _i2.GraphQLField(
          'groupByrankingPoint',
          args: _i2.GraphQLArgs([
            _i2.GraphQLArg(
              'where',
              where,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'orderBy',
              orderBy,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'by',
              by,
              isRequired: true,
            ),
            _i2.GraphQLArg(
              'having',
              having,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'take',
              take,
              isRequired: false,
            ),
            _i2.GraphQLArg(
              'skip',
              skip,
              isRequired: false,
            ),
          ]),
          fields: _i2.GraphQLFields(RankingPointScalarFieldEnum.values
              .map((RankingPointScalarFieldEnum e) =>
                  _i2.GraphQLField(_i2.languageKeywordDecode(e.name)))
              .toList()),
        )
      ]),
    ).toSdl();
    final _i2.QueryEngineResult result = await _engine.request(
      query: sdl,
      headers: _headers,
    );
    return (result.data['groupByrankingPoint'] as List)
        .whereType<Map>()
        .map((Map e) => RankingPointGroupByOutputType.fromJson(e.cast()))
        .toList();
  }
}

final _i3.Document dmmf = _i3.Document.fromJson(<String, dynamic>{
  'datamodel': {
    'models': [
      {
        'name': 'game',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'name',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'tournament',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'tournament',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'weWin',
            'kind': 'enum',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Win',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'weWin',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Win',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'ourTeam',
            'kind': 'enum',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Team',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'ourTeam',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Team',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'version',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'Int',
            'default': 0.0,
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'version',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': 0.0,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'createdAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': true,
            'type': 'DateTime',
            'default': {
              'name': 'now',
              'args': [],
            },
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'updatedAt',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'DateTime',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'points',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'points',
            'relationName': 'gameTopoints',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'points',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'points',
              'relationName': 'gameTopoints',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'rankingPoint',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'rankingPoint',
            'relationName': 'gameTorankingPoint',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'rankingPoint',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'rankingPoint',
              'relationName': 'gameTorankingPoint',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'game',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'name',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'tournament',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'weWin',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Win',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'ourTeam',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Team',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'version',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'Int',
              'default': 0.0,
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'createdAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': true,
              'type': 'DateTime',
              'default': {
                'name': 'now',
                'args': [],
              },
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'updatedAt',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'DateTime',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'points',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'points',
              'relationName': 'gameTopoints',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'rankingPoint',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'rankingPoint',
              'relationName': 'gameTorankingPoint',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'launch',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'type',
            'kind': 'enum',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'launchStatus',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'type',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'launchStatus',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'markerId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'markerId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'points',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'points',
            'relationName': 'launchTopoints',
            'relationFromFields': ['markerId'],
            'relationToFields': ['id'],
            'relationOnDelete': 'NoAction',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'points',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'points',
              'relationName': 'launchTopoints',
              'relationFromFields': ['markerId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'launch',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'type',
              'kind': 'enum',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'launchStatus',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'markerId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'points',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'points',
              'relationName': 'launchTopoints',
              'relationFromFields': ['markerId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'points',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'isAuto',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Boolean',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'isAuto',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Boolean',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'pointType',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'pointType',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'pointValue',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'pointValue',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'left',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Float',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'left',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'top',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Float',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'top',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'gameId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'gameId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'game',
            'kind': 'object',
            'isList': false,
            'isRequired': false,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'game',
            'relationName': 'gameTopoints',
            'relationFromFields': ['gameId'],
            'relationToFields': ['id'],
            'relationOnDelete': 'NoAction',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'game',
              'kind': 'object',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'game',
              'relationName': 'gameTopoints',
              'relationFromFields': ['gameId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'launch',
            'kind': 'object',
            'isList': true,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'launch',
            'relationName': 'launchTopoints',
            'relationFromFields': [],
            'relationToFields': [],
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationOnDelete': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'launch',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'launch',
              'relationName': 'launchTopoints',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'points',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'isAuto',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Boolean',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'pointType',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'pointValue',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'left',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'top',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Float',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'gameId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'game',
              'kind': 'object',
              'isList': false,
              'isRequired': false,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'game',
              'relationName': 'gameTopoints',
              'relationFromFields': ['gameId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'launch',
              'kind': 'object',
              'isList': true,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'launch',
              'relationName': 'launchTopoints',
              'relationFromFields': [],
              'relationToFields': [],
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
      {
        'name': 'rankingPoint',
        'dbName': null,
        'fields': [
          {
            'name': 'id',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': true,
            'isId': true,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'type',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'type',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'numberScore',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'numberScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'minScore',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'minScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'maxScore',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'Int',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'maxScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'gameId',
            'kind': 'scalar',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': true,
            'hasDefaultValue': false,
            'type': 'String',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'relationFromFields': null,
            'relationToFields': null,
            'relationOnDelete': null,
            'relationName': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'gameId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
          {
            'name': 'game',
            'kind': 'object',
            'isList': false,
            'isRequired': true,
            'isUnique': false,
            'isId': false,
            'isReadOnly': false,
            'hasDefaultValue': false,
            'type': 'game',
            'relationName': 'gameTorankingPoint',
            'relationFromFields': ['gameId'],
            'relationToFields': ['id'],
            'relationOnDelete': 'NoAction',
            'isGenerated': false,
            'isUpdatedAt': false,
            'dbNames': null,
            'default': null,
            'documentation': null,
            'additionalProperties': {
              'name': 'game',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'game',
              'relationName': 'gameTorankingPoint',
              'relationFromFields': ['gameId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          },
        ],
        'primaryKey': null,
        'uniqueFields': [],
        'uniqueIndexes': [],
        'isGenerated': false,
        'fieldsMap': null,
        'documentation': null,
        'extra': {
          'name': 'rankingPoint',
          'dbName': null,
          'fields': [
            {
              'name': 'id',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': true,
              'isId': true,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'type',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'numberScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'minScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'maxScore',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'Int',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'gameId',
              'kind': 'scalar',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': true,
              'hasDefaultValue': false,
              'type': 'String',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
            {
              'name': 'game',
              'kind': 'object',
              'isList': false,
              'isRequired': true,
              'isUnique': false,
              'isId': false,
              'isReadOnly': false,
              'hasDefaultValue': false,
              'type': 'game',
              'relationName': 'gameTorankingPoint',
              'relationFromFields': ['gameId'],
              'relationToFields': ['id'],
              'relationOnDelete': 'NoAction',
              'isGenerated': false,
              'isUpdatedAt': false,
            },
          ],
          'primaryKey': null,
          'uniqueFields': [],
          'uniqueIndexes': [],
          'isGenerated': false,
        },
      },
    ],
    'enums': [
      {
        'name': 'Team',
        'values': [
          {
            'name': 'Red',
            'dbName': null,
          },
          {
            'name': 'Blue',
            'dbName': null,
          },
        ],
        'dbName': null,
        'documentation': null,
      },
      {
        'name': 'Win',
        'values': [
          {
            'name': 'Win',
            'dbName': null,
          },
          {
            'name': 'Lose',
            'dbName': null,
          },
          {
            'name': 'Tie',
            'dbName': null,
          },
        ],
        'dbName': null,
        'documentation': null,
      },
      {
        'name': 'launchStatus',
        'values': [
          {
            'name': 'GotInUpper',
            'dbName': null,
          },
          {
            'name': 'GotInLower',
            'dbName': null,
          },
          {
            'name': 'BounceOut',
            'dbName': null,
          },
          {
            'name': 'MissClose',
            'dbName': null,
          },
          {
            'name': 'MissFar',
            'dbName': null,
          },
          {
            'name': 'NoLaunch',
            'dbName': null,
          },
        ],
        'dbName': null,
        'documentation': null,
      },
    ],
    'types': [],
  },
  'schema': {
    'rootQueryType': null,
    'rootMutationType': null,
    'inputObjectTypes': {
      'model': null,
      'prisma': [
        {
          'name': 'gameWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PointsListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'RankingPointListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'gameScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'gameScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'gameScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumWinWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumTeamWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'PointsRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'GameRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'LaunchListRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchOrderByRelationAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'pointsScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'GameRelationFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointOrderByWithRelationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameOrderByWithRelationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointWhereUniqueInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointOrderByWithAggregationInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 0,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCountOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointAvgOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointMaxOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointMinOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointSumOrderByAggregateInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointScalarWhereWithAggregatesInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereWithAggregatesInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'rankingPointUncheckedCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'rankingPointUncheckedUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateNestedOneWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateOneRequiredWithoutLaunchNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateNestedOneWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateNestedManyWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateNestedManyWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateOneWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateManyWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUncheckedUpdateManyWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateNestedOneWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedCreateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateOneRequiredWithoutRankingPointNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedUpdateInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateManyMutationInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedUpdateManyInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumWinFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumTeamFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumWinWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumWinWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumTeamWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumTeamWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumlaunchStatusFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumlaunchStatusWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'FloatNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'is',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isNot',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'LaunchListRelationFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'every',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'some',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'none',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchOrderByRelationAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'FloatNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'mode',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'QueryMode',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCountOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointAvgOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointMaxOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointMinOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointSumOrderByAggregateInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'SortOrder',
                  'location': 'enumTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateNestedManyWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateNestedManyWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedCreateNestedManyWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedCreateNestedManyWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'StringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumWinFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumTeamFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'IntFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'DateTimeFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateManyWithoutGameNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateManyWithoutGameNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateManyWithoutGameNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedUpdateManyWithoutGameNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointCreateOrConnectWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpsertWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateManyGameInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpdateWithWhereUniqueWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointUpdateManyWithWhereWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateNestedOneWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'EnumlaunchStatusFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateOneRequiredWithoutLaunchNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateOrConnectWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpsertWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateNestedOneWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateNestedManyWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateManyPointsInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedCreateNestedManyWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateManyPointsInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'BoolFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableFloatFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'increment',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'decrement',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'multiply',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'divide',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateOneWithoutPointsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpsertWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateManyWithoutPointsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpsertWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpsertWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateManyPointsInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpdateWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateManyWithWhereWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpdateManyWithWhereWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NullableStringFieldUpdateOperationsInput',
          'constraints': {
            'maxNumFields': 1,
            'minNumFields': 1,
          },
          'fields': [
            {
              'name': 'set',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedUpdateManyWithoutPointsNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchCreateOrConnectWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpsertWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpsertWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateManyPointsInputEnvelope',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'set',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'disconnect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'delete',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpdateWithWhereUniqueWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updateMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateManyWithWhereWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchUpdateManyWithWhereWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'deleteMany',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateNestedOneWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateOrConnectWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateOneRequiredWithoutRankingPointNestedInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'connectOrCreate',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateOrConnectWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'upsert',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpsertWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'connect',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedUpdateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumWinFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumTeamFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumWinWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumWinWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumWinFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumTeamWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumTeamWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumTeamFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedDateTimeWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedDateTimeWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedDateTimeFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumlaunchStatusFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedEnumlaunchStatusWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedEnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedBoolFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedBoolWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedBoolWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedBoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedFloatNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedFloatNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_avg',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_sum',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedFloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedIntNullableFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'NestedStringNullableWithAggregatesFilter',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'equals',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'in',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'notIn',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'lt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'lte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'gte',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'contains',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'startsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'endsWith',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'not',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NestedStringNullableWithAggregatesFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': '_count',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedIntNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_min',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': '_max',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'NestedStringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateNestedManyWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedCreateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateNestedManyWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateOrConnectWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateManyGameInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'pointsCreateManyGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedCreateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateOrConnectWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateManyGameInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'rankingPointCreateManyGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpsertWithWhereUniqueWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateWithWhereUniqueWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateManyWithWhereWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateManyWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'pointsScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'BoolFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'FloatNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringNullableFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpsertWithWhereUniqueWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedCreateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateWithWhereUniqueWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'rankingPointUncheckedUpdateWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateManyWithWhereWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type':
                      'rankingPointUncheckedUpdateManyWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'rankingPointScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'IntFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateNestedOneWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedCreateWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateOrConnectWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpsertWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'game',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateOneWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'gameId',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableStringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedCreateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'rankingPointUncheckedCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateOrConnectWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedCreateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateOrConnectWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateManyPointsInputEnvelope',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchCreateManyPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'skipDuplicates',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpsertWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'rankingPointUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedUpdateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'rankingPoint',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type':
                      'rankingPointUncheckedUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpsertWithWhereUniqueWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedCreateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateWithWhereUniqueWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedUpdateWithoutPointsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateManyWithWhereWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'data',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateManyMutationInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchUncheckedUpdateManyWithoutLaunchInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchScalarWhereInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'AND',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'OR',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': true,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'NOT',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': true,
                  'type': 'launchScalarWhereInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'markerId',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'StringFilter',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedCreateWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUncheckedCreateNestedManyWithoutGameInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameCreateOrConnectWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'where',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameWhereUniqueInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpsertWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'update',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameUpdateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedUpdateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'create',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'gameCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'gameUncheckedCreateWithoutRankingPointInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUpdateWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'gameUncheckedUpdateWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'name',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'tournament',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'weWin',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Win',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumWinFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'ourTeam',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Team',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumTeamFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'version',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'createdAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'updatedAt',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'DateTime',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'DateTimeFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'points',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'pointsUncheckedUpdateManyWithoutGameNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsCreateManyGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointCreateManyGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUpdateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUpdateManyWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'launch',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchUncheckedUpdateManyWithoutPointsNestedInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'pointsUncheckedUpdateManyWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'isAuto',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Boolean',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'BoolFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointType',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'pointValue',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'left',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'top',
              'comment': null,
              'isNullable': true,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Float',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'NullableFloatFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
                {
                  'isList': false,
                  'type': 'Null',
                  'location': 'scalar',
                  'namespace': null,
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUpdateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedUpdateWithoutGameInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPointUncheckedUpdateManyWithoutRankingPointInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'numberScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'minScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'maxScore',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'Int',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'IntFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchCreateManyPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                }
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': true,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                }
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUpdateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedUpdateWithoutPointsInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launchUncheckedUpdateManyWithoutLaunchInput',
          'constraints': {
            'maxNumFields': null,
            'minNumFields': null,
          },
          'fields': [
            {
              'name': 'id',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'String',
                  'location': 'scalar',
                  'namespace': null,
                },
                {
                  'isList': false,
                  'type': 'StringFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
            {
              'name': 'type',
              'comment': null,
              'isNullable': false,
              'isRequired': false,
              'inputTypes': [
                {
                  'isList': false,
                  'type': 'launchStatus',
                  'location': 'enumTypes',
                  'namespace': 'model',
                },
                {
                  'isList': false,
                  'type': 'EnumlaunchStatusFieldUpdateOperationsInput',
                  'location': 'inputObjectTypes',
                  'namespace': 'prisma',
                },
              ],
              'deprecation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'outputObjectTypes': {
      'model': [
        {
          'name': 'game',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'tournament',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'weWin',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Win',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'ourTeam',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Team',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'version',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'points',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PointsScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'rankingPoint',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'RankingPointScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'GameCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'launch',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'launchStatus',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'markerId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'points',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'points',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'isAuto',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointType',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointValue',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'game',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'launch',
              'isNullable': true,
              'outputType': {
                'isList': true,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'LaunchScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'PointsCountOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'rankingPoint',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'numberScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'game',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
      'prisma': [
        {
          'name': 'Query',
          'fields': [
            {
              'name': 'findFirstgame',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'GameScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManygame',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'GameScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregategame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateGame',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupBygame',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'GameGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'gameOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'GameScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'GameScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquegame',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstlaunch',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'LaunchScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManylaunch',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'LaunchScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregatelaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateLaunch',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupBylaunch',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'LaunchGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'LaunchScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'LaunchScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquelaunch',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstpoints',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PointsScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManypoints',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PointsScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregatepoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregatePoints',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupBypoints',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'PointsGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'PointsScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'PointsScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquepoints',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findFirstrankingPoint',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'RankingPointScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findManyrankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'distinct',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'RankingPointScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'aggregaterankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AggregateRankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointOrderByWithRelationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'cursor',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'groupByrankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': true,
                'type': 'RankingPointGroupByOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'orderBy',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointOrderByWithAggregationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'by',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'RankingPointScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'RankingPointScalarFieldEnum',
                      'location': 'enumTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'having',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointScalarWhereWithAggregatesInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'take',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skip',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Int',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'findUniquerankingPoint',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'Mutation',
          'fields': [
            {
              'name': 'createOnegame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnegame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManygame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'gameCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnegame',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnegame',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'game',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManygame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'gameUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManygame',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'gameWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOnelaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnelaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManylaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'launchCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnelaunch',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnelaunch',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launch',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManylaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'launchUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManylaunch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'launchWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOnepoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnepoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManypoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'pointsCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnepoints',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnepoints',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'points',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManypoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'pointsUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManypoints',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'pointsWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createOnerankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'upsertOnerankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'create',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointUncheckedCreateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'update',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createManyrankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': true,
                      'type': 'rankingPointCreateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'skipDuplicates',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Boolean',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteOnerankingPoint',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateOnerankingPoint',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'rankingPoint',
                'location': 'outputObjectTypes',
                'namespace': 'model',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointUncheckedUpdateInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereUniqueInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updateManyrankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'data',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointUpdateManyMutationInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                    {
                      'isList': false,
                      'type': 'rankingPointUncheckedUpdateManyInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    },
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'deleteManyrankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'AffectedRowsOutput',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [
                {
                  'name': 'where',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'rankingPointWhereInput',
                      'location': 'inputObjectTypes',
                      'namespace': 'prisma',
                    }
                  ],
                  'deprecation': null,
                }
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'executeRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'queryRaw',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Json',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [
                {
                  'name': 'query',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': true,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'String',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
                {
                  'name': 'parameters',
                  'comment': null,
                  'isNullable': false,
                  'isRequired': false,
                  'inputTypes': [
                    {
                      'isList': false,
                      'type': 'Json',
                      'location': 'scalar',
                      'namespace': null,
                    }
                  ],
                  'deprecation': null,
                },
              ],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateGame',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'tournament',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'weWin',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Win',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'ourTeam',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Team',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'version',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'GameMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateLaunch',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'LaunchGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'launchStatus',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'markerId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'LaunchMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregatePoints',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'isAuto',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointType',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointValue',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'PointsMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AggregateRankingPoint',
          'fields': [
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointGroupByOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'numberScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_count',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointCountAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_avg',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointAvgAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_sum',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointSumAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_min',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointMinAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_max',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'RankingPointMaxAggregateOutputType',
                'location': 'outputObjectTypes',
                'namespace': 'prisma',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'AffectedRowsOutput',
          'fields': [
            {
              'name': 'count',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameCountOutputType',
          'fields': [
            {
              'name': 'points',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'rankingPoint',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'tournament',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'weWin',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'ourTeam',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'version',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameAvgAggregateOutputType',
          'fields': [
            {
              'name': 'version',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameSumAggregateOutputType',
          'fields': [
            {
              'name': 'version',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'tournament',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'weWin',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Win',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'ourTeam',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Team',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'version',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'GameMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'name',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'tournament',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'weWin',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Win',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'ourTeam',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Team',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'version',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'createdAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'updatedAt',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'DateTime',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'LaunchCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'markerId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'LaunchMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launchStatus',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'markerId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'LaunchMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'launchStatus',
                'location': 'enumTypes',
                'namespace': 'model',
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'markerId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsCountOutputType',
          'fields': [
            {
              'name': 'launch',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            }
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'isAuto',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointType',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointValue',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsAvgAggregateOutputType',
          'fields': [
            {
              'name': 'pointValue',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsSumAggregateOutputType',
          'fields': [
            {
              'name': 'pointValue',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'isAuto',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointType',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointValue',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'PointsMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'isAuto',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Boolean',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointType',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'pointValue',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'left',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'top',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointCountAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'numberScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': '_all',
              'isNullable': false,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointAvgAggregateOutputType',
          'fields': [
            {
              'name': 'numberScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Float',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointSumAggregateOutputType',
          'fields': [
            {
              'name': 'numberScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointMinAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'numberScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
        {
          'name': 'RankingPointMaxAggregateOutputType',
          'fields': [
            {
              'name': 'id',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'type',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'numberScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'minScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'maxScore',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'Int',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
            {
              'name': 'gameId',
              'isNullable': true,
              'outputType': {
                'isList': false,
                'type': 'String',
                'location': 'scalar',
                'namespace': null,
              },
              'args': [],
              'deprecation': null,
              'documentation': null,
            },
          ],
          'fieldMap': null,
        },
      ],
    },
    'enumTypes': {
      'model': [
        {
          'name': 'Team',
          'values': [
            'Red',
            'Blue',
          ],
        },
        {
          'name': 'Win',
          'values': [
            'Win',
            'Lose',
            'Tie',
          ],
        },
        {
          'name': 'launchStatus',
          'values': [
            'GotInUpper',
            'GotInLower',
            'BounceOut',
            'MissClose',
            'MissFar',
            'NoLaunch',
          ],
        },
      ],
      'prisma': [
        {
          'name': 'GameScalarFieldEnum',
          'values': [
            'id',
            'name',
            'tournament',
            'weWin',
            'ourTeam',
            'version',
            'createdAt',
            'updatedAt',
          ],
        },
        {
          'name': 'LaunchScalarFieldEnum',
          'values': [
            'id',
            'type',
            'markerId',
          ],
        },
        {
          'name': 'PointsScalarFieldEnum',
          'values': [
            'id',
            'isAuto',
            'pointType',
            'pointValue',
            'left',
            'top',
            'gameId',
          ],
        },
        {
          'name': 'QueryMode',
          'values': [
            'default',
            'insensitive',
          ],
        },
        {
          'name': 'RankingPointScalarFieldEnum',
          'values': [
            'id',
            'type',
            'numberScore',
            'minScore',
            'maxScore',
            'gameId',
          ],
        },
        {
          'name': 'SortOrder',
          'values': [
            'asc',
            'desc',
          ],
        },
        {
          'name': 'TransactionIsolationLevel',
          'values': [
            'ReadUncommitted',
            'ReadCommitted',
            'RepeatableRead',
            'Serializable',
          ],
        },
      ],
    },
  },
  'mappings': {
    'modelOperations': [
      {
        'model': 'game',
        'findUnique': 'findUniquegame',
        'findFirst': 'findFirstgame',
        'findMany': 'findManygame',
        'create': 'createOnegame',
        'createMany': 'createManygame',
        'update': 'updateOnegame',
        'updateMany': 'updateManygame',
        'upsert': 'upsertOnegame',
        'delete': 'deleteOnegame',
        'deleteMany': 'deleteManygame',
        'aggregate': 'aggregategame',
        'groupBy': 'groupBygame',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'launch',
        'findUnique': 'findUniquelaunch',
        'findFirst': 'findFirstlaunch',
        'findMany': 'findManylaunch',
        'create': 'createOnelaunch',
        'createMany': 'createManylaunch',
        'update': 'updateOnelaunch',
        'updateMany': 'updateManylaunch',
        'upsert': 'upsertOnelaunch',
        'delete': 'deleteOnelaunch',
        'deleteMany': 'deleteManylaunch',
        'aggregate': 'aggregatelaunch',
        'groupBy': 'groupBylaunch',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'points',
        'findUnique': 'findUniquepoints',
        'findFirst': 'findFirstpoints',
        'findMany': 'findManypoints',
        'create': 'createOnepoints',
        'createMany': 'createManypoints',
        'update': 'updateOnepoints',
        'updateMany': 'updateManypoints',
        'upsert': 'upsertOnepoints',
        'delete': 'deleteOnepoints',
        'deleteMany': 'deleteManypoints',
        'aggregate': 'aggregatepoints',
        'groupBy': 'groupBypoints',
        'findRaw': null,
        'aggregateRaw': null,
      },
      {
        'model': 'rankingPoint',
        'findUnique': 'findUniquerankingPoint',
        'findFirst': 'findFirstrankingPoint',
        'findMany': 'findManyrankingPoint',
        'create': 'createOnerankingPoint',
        'createMany': 'createManyrankingPoint',
        'update': 'updateOnerankingPoint',
        'updateMany': 'updateManyrankingPoint',
        'upsert': 'upsertOnerankingPoint',
        'delete': 'deleteOnerankingPoint',
        'deleteMany': 'deleteManyrankingPoint',
        'aggregate': 'aggregaterankingPoint',
        'groupBy': 'groupByrankingPoint',
        'findRaw': null,
        'aggregateRaw': null,
      },
    ],
    'otherOperations': {
      'read': [],
      'write': [
        'executeRaw',
        'queryRaw',
      ],
    },
  },
});
final String schema = _i4.utf8.decode(_i4.base64.decode(
    r'Z2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtZGFydCIKICBwcmV2aWV3RmVhdHVyZXMgPSBbImludGVyYWN0aXZlVHJhbnNhY3Rpb25zIl0KfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAicG9zdGdyZXNxbCIKICB1cmwgICAgICA9IGVudigiREFUQUJBU0VfVVJMIikKfQoKbW9kZWwgZ2FtZSB7CiAgaWQgICAgICAgICAgIFN0cmluZyAgICAgICAgIEBpZCBAdW5pcXVlCiAgbmFtZSAgICAgICAgIFN0cmluZwogIHRvdXJuYW1lbnQgICBTdHJpbmcKICB3ZVdpbiAgICAgICAgV2luCiAgb3VyVGVhbSAgICAgIFRlYW0KICB2ZXJzaW9uICAgICAgSW50ICAgICAgICAgICAgQGRlZmF1bHQoMCkKICBjcmVhdGVkQXQgICAgRGF0ZVRpbWUgICAgICAgQGRlZmF1bHQobm93KCkpCiAgdXBkYXRlZEF0ICAgIERhdGVUaW1lCiAgcG9pbnRzICAgICAgIHBvaW50c1tdCiAgcmFua2luZ1BvaW50IHJhbmtpbmdQb2ludFtdCn0KCm1vZGVsIGxhdW5jaCB7CiAgaWQgICAgICAgU3RyaW5nICAgICAgIEBpZCBAdW5pcXVlCiAgdHlwZSAgICAgbGF1bmNoU3RhdHVzCiAgbWFya2VySWQgU3RyaW5nCiAgcG9pbnRzICAgcG9pbnRzICAgICAgIEByZWxhdGlvbihmaWVsZHM6IFttYXJrZXJJZF0sIHJlZmVyZW5jZXM6IFtpZF0sIG9uRGVsZXRlOiBOb0FjdGlvbiwgb25VcGRhdGU6IE5vQWN0aW9uKQp9Cgptb2RlbCBwb2ludHMgewogIGlkICAgICAgICAgU3RyaW5nICAgQGlkIEB1bmlxdWUKICBpc0F1dG8gICAgIEJvb2xlYW4KICBwb2ludFR5cGUgIFN0cmluZwogIHBvaW50VmFsdWUgSW50CiAgbGVmdCAgICAgICBGbG9hdD8KICB0b3AgICAgICAgIEZsb2F0PwogIGdhbWVJZCAgICAgU3RyaW5nPwogIGdhbWUgICAgICAgZ2FtZT8gICAgQHJlbGF0aW9uKGZpZWxkczogW2dhbWVJZF0sIHJlZmVyZW5jZXM6IFtpZF0sIG9uRGVsZXRlOiBOb0FjdGlvbiwgb25VcGRhdGU6IE5vQWN0aW9uKQogIGxhdW5jaCAgICAgbGF1bmNoW10KfQoKbW9kZWwgcmFua2luZ1BvaW50IHsKICBpZCAgICAgICAgICBTdHJpbmcgQGlkIEB1bmlxdWUKICB0eXBlICAgICAgICBTdHJpbmcKICBudW1iZXJTY29yZSBJbnQKICBtaW5TY29yZSAgICBJbnQKICBtYXhTY29yZSAgICBJbnQKICBnYW1lSWQgICAgICBTdHJpbmcKICBnYW1lICAgICAgICBnYW1lICAgQHJlbGF0aW9uKGZpZWxkczogW2dhbWVJZF0sIHJlZmVyZW5jZXM6IFtpZF0sIG9uRGVsZXRlOiBOb0FjdGlvbiwgb25VcGRhdGU6IE5vQWN0aW9uKQp9CgplbnVtIFRlYW0gewogIFJlZAogIEJsdWUKfQoKZW51bSBXaW4gewogIFdpbgogIExvc2UKICBUaWUKfQoKZW51bSBsYXVuY2hTdGF0dXMgewogIEdvdEluVXBwZXIKICBHb3RJbkxvd2VyCiAgQm91bmNlT3V0CiAgTWlzc0Nsb3NlCiAgTWlzc0ZhcgogIE5vTGF1bmNoCn0K'));
const String _executable =
    r'C:\Users\Anand\Documents\coding\flutter\bloc\internet_test\.dart_tool\prisma\query-engine';

class Datasources {
  Datasources({this.db});

  final _i2.PrismaNullable<_i2.Datasource> db;

  Map<String, _i2.Datasource> _toOverwrites() {
    final $overwrites = <String, _i2.PrismaNullable<_i2.Datasource>>{'db': db}
      ..removeWhere((
        _,
        v,
      ) =>
          v == null);
    return $overwrites.cast();
  }
}

class PrismaClient {
  const PrismaClient._(
    this._engine, [
    this._headers,
  ]);

  factory PrismaClient({_i2.PrismaNullable<Datasources> datasources}) {
    final _i2.Engine engine = _i2.BinaryEngine(
      datasources: datasources?._toOverwrites() ?? <String, _i2.Datasource>{},
      dmmf: dmmf,
      schema: schema,
      executable: _executable,
      environment: _i5.environment.all,
    );
    final PrismaClient client = PrismaClient._(
      engine,
      null,
    );
    return client;
  }

  final _i2.Engine _engine;

  final _i2.PrismaNullable<_i2.QueryEngineRequestHeaders> _headers;

  GameDelegate get game => GameDelegate._(
        _engine,
        _headers,
      );
  LaunchDelegate get launch => LaunchDelegate._(
        _engine,
        _headers,
      );
  PointsDelegate get points => PointsDelegate._(
        _engine,
        _headers,
      );
  RankingPointDelegate get rankingPoint => RankingPointDelegate._(
        _engine,
        _headers,
      );

  /// Connect to the database.
  Future<void> $connect() => _engine.start();

  /// Disconnect from the database.
  Future<void> $disconnect() async {
    await _engine.stop();
  }

  /// Interactive transactions.
  ///
  /// Sometimes you need more control over what queries execute within a transaction. Interactive transactions are meant to provide you with an escape hatch.
  ///
  /// **NOTE**: If you use interactive transactions, then you cannot use the [Data Proxy](https://www.prisma.io/docs/data-platform/data-proxy) at the same time.
  ///
  /// E.g:
  /// ```dart
  /// final prisma = PrismaClient();
  /// prisma.$transaction((transaction) async {
  ///   await transaction.user.create({ ... });
  ///   await transaction.post.create({ ... });
  /// });
  /// ```
  Future<T> $transaction<T>(
    Future<T> Function(PrismaClient) fn, [
    _i2.TransactionOptions? options,
  ]) async {
    if (_headers?.transactionId != null) return fn(this);
    final _i2.TransactionHeaders headers = _i2.TransactionHeaders();
    final _i2.TransactionInfo info = await _engine.startTransaction(
      headers: headers,
      options: options ?? _i2.TransactionOptions(),
    );
    try {
      final T result = await fn(PrismaClient._(
        _engine,
        _i2.QueryEngineRequestHeaders(transactionId: info.id),
      ));
      await _engine.commitTransaction(
        headers: headers,
        info: info,
      );
      return result;
    } catch (e) {
      await _engine.rollbackTransaction(
        headers: headers,
        info: info,
      );
      rethrow;
    }
  }
}
